$NetBSD: patch-cg,v 1.1 2005/06/02 12:37:33 martin Exp $

--- extensions/transformiix/source/base/Double.cpp.orig	2004-01-15 22:23:18.000000000 +0100
+++ extensions/transformiix/source/base/Double.cpp	2005-05-30 15:51:38.000000000 +0200
@@ -48,6 +48,24 @@
  * Utility class for doubles
  */
 
+/* this should be some other predicate - like "has working math support" */
+#if defined(__NetBSD__) || (defined(__sun__) && defined(_LP64))
+MBool Double::isInfinite(double aDbl)
+{
+	return isinf(aDbl);
+}
+
+MBool Double::isNaN(double aDbl)
+{
+	return isnan(aDbl);
+}
+
+MBool Double::isNeg(double aDbl)
+{
+	return aDbl<0.0;
+}
+#else
+
 //A trick to handle IEEE floating point exceptions on FreeBSD - E.D.
 #ifdef __FreeBSD__
 #include <ieeefp.h>
@@ -157,6 +175,7 @@
 {
     return (TX_DOUBLE_HI32(aDbl) & TX_DOUBLE_HI32_SIGNBIT) != 0;
 }
+#endif
 
 /*
  * Converts the given String to a double, if the String value does not
