$NetBSD: patch-aj,v 1.3 2001/08/05 17:02:25 fredb Exp $

--- configure.orig	Wed Jul 10 20:34:39 1996
+++ configure
@@ -1887,7 +1887,7 @@
 fi
 
 echo $ac_n "checking for -lXpm""... $ac_c" 1>&6
-ac_lib_var=`echo Xpm'_'_XpmFreeXpmImage | tr './+\055' '__p_'`
+ac_lib_var=`echo Xpm'_'XpmFreeXpmImage | tr './+\055' '__p_'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -1899,11 +1899,11 @@
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
     builtin and then its argument prototype would still apply.  */
-char _XpmFreeXpmImage();
+char XpmFreeXpmImage();
 
 int main() { return 0; }
 int t() {
-_XpmFreeXpmImage()
+XpmFreeXpmImage()
 ; return 0; }
 EOF
 if { (eval echo configure:1910: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; }; then
@@ -3038,7 +3038,7 @@
        LIBS="${withval}/libjpeg.a ${LIBS}"
     else
        if test -r ${withval}/lib/libjpeg.a ; then 
-         LIBS="${withval}/lib/libjpeg.a ${LIBS}"
+         LIBS="-L${withval}/lib -ljpeg ${LIBS}"
        else
 	 { echo "configure: error: Could not find libjpeg.a in ${withval}" 1>&2; exit 1; }
        fi
@@ -3125,8 +3125,8 @@
        libz="${withval}/libz.a"
     else
        if test -r ${withval}/lib/libz.a ; then 
-         LIBS="${withval}/lib/libz.a ${LIBS}"
-	 libz="${withval}/lib/libz.a"
+         LIBS="-L${withval}/lib -lz ${LIBS}"
+	 libz="-L${withval}/lib -lz"
        else
 	 { echo "configure: error: Could not find libz.a in ${withval}" 1>&2; exit 1; }
        fi
@@ -3180,7 +3180,7 @@
 	    LIBS="${withval}/libpng.a ${libz} ${LIBS}"
 	else
 	    if test -r ${withval}/lib/libpng.a ; then 
-		LIBS="${withval}/lib/libpng.a ${libz} ${LIBS}"
+		LIBS="-L${withval}/lib -lpng ${libz} ${LIBS}"
 	    else
 		{ echo "configure: error: Could not find libpng.a in ${withval}" 1>&2; exit 1; }
 	    fi
@@ -3288,7 +3288,7 @@
 #line 3289 "configure"
 #include "confdefs.h"
 
-	    #include<XmStrDefs.h>
+	    #include<Xm/XmStrDefs.h>
 	
 int main() { return 0; }
 int t() {
