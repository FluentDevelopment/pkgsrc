#!/bin/sh
#
# $NetBSD: DEINSTALL,v 1.1 2001/11/01 02:16:06 zuntum Exp $

PKGNAME=$1
STAGE=$2

CAT="@CAT@"
CMP="@CMP@"
RM="@RM@"
RMDIR="@RMDIR@"
TRUE="@TRUE@"

SERVERROOT="@APACHE_SYSCONFDIR@"
DATADIR=${PKG_PREFIX}/share/httpd
LOGDIR=/var/log/httpd
SPOOLDIR=/var/spool/httpd
SAMPLECONFDIR=${PKG_PREFIX}/share/examples/httpd
CONFDIR=${SERVERROOT}
CONFFILES="httpd.conf"
NONCONFFILES="magic mime.types"

case ${STAGE} in
DEINSTALL)
	# Remove configuration files if they don't differ from the default
	# config file.
	#
	for file in ${CONFFILES} ${NONCONFFILES}
	do
		FILE=${CONFDIR}/${file}
		SAMPLEFILE=${SAMPLECONFDIR}/${file}.default
		if ${CMP} -s ${FILE} ${SAMPLEFILE}
		then
			${RM} -f ${FILE}
		fi
	done
	;;

POST-DEINSTALL)
	modified_files=''
	for file in ${CONFFILES} ${NONCONFFILES}
	do
		FILE=${CONFDIR}/${file}
		if [ -f ${FILE} ]
		then
			modified_files="${modified_files} ${FILE}"
		fi
	done

	${RMDIR} ${SPOOLDIR}/proxy 2>/dev/null || ${TRUE}
	${RMDIR} ${SPOOLDIR} 2>/dev/null || ${TRUE}
	${RMDIR} ${LOGDIR} 2>/dev/null || ${TRUE}
	${RMDIR} ${DATADIR}/htdocs 2>/dev/null || ${TRUE}
	${RMDIR} ${DATADIR} 2>/dev/null || ${TRUE}
	${RMDIR} ${SERVERROOT}/ssl.prm 2>/dev/null || ${TRUE}
	${RMDIR} ${SERVERROOT}/ssl.key 2>/dev/null || ${TRUE}
	${RMDIR} ${SERVERROOT}/ssl.csr 2>/dev/null || ${TRUE}
	${RMDIR} ${SERVERROOT}/ssl.crt 2>/dev/null || ${TRUE}
	${RMDIR} ${SERVERROOT}/ssl.crl 2>/dev/null || ${TRUE}
	${RMDIR} ${SERVERROOT} 2>/dev/null || ${TRUE}

	existing_dirs=''
	for dir in ${CONFDIR} ${LOGDIR} ${REQUESTDIR} ${DATADIR}
	do
		if [ -d ${dir} ]
		then
			existing_dirs="${existing_dirs} ${dir}"
		fi
	done

	if [ -n "${modified_files}" -o -n "${existing_dirs}" ]
	then
        	${CAT} << EOF
===========================================================================
If you won't be using ${PKGNAME} any longer, you may want to remove:
EOF
		if [ -n "${modified_files}" ]
		then
			${CAT} << EOF

  * the following files:

EOF
			for file in ${modified_files}
			do
				echo "	${file}"
			done
		fi
		if [ -n "${existing_dirs}" ]
		then
			${CAT} << EOF

  * the following directories:

EOF
			for dir in ${existing_dirs}
			do
				echo "	${dir}"
			done
		fi
		${CAT} << EOF
===========================================================================
EOF
	fi
	;;

*)
	echo "Unexpected argument: ${STAGE}"
	exit 1
	;;
esac
exit 0
