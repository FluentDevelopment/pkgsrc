$NetBSD: patch-ah,v 1.8 2002/10/26 18:11:20 bouyer Exp $
--- configure.in.orig	Thu Dec 14 12:49:06 2000
+++ configure.in	Mon Oct 21 22:40:58 2002
@@ -213,8 +213,13 @@
 		getlogin getpass fcntl readdir sysinfo ioctl chdir tempnam \
 		getsockopt setsockopt \
 		gettimeofday mktime timegm tzset)
-AC_CHECK_FUNC(unlink, , AC_CHECK_FUNC(remove, AC_DEFINE(unlink, remove)))
+AC_CHECK_FUNC(unlink)
+if test "$ac_cv_func_unlink" != yes; then
+  AC_CHECK_FUNC(remove)
+fi
 
+dnl AC_CHECK_FUNC(unlink, , AC_CHECK_FUNC(remove, AC_DEFINE(unlink, remove)))
+
 dnl Checks for configuration arguments
 AC_MSG_CHECKING(whether to support direct WAIS access.)
 AC_ARG_WITH(wais,
@@ -307,7 +312,10 @@
     AC_MSG_RESULT(yes)
     AC_DEFINE(HT_POSIX_REGEX)
     if test "x$withval" = "xyes"; then
-      AC_CHECK_LIB(rx, regexec, [ LIBS="-lrx $LIBS" ] )
+      AC_TRY_LINK([],
+	          [ regexec(); ],
+		  [],
+		  [ AC_CHECK_LIB(rx, regexec, [ LIBS="-lrx $LIBS" ] ) ] )
     else
       AC_ADDLIB($withval)
       AC_TRY_LINK([],
@@ -510,53 +518,45 @@
 [ case "$withval" in
   no)
     AC_MSG_RESULT(no)
+    MD5DIR=""
     WWWMD5=""
     LWWWMD5=""
     LIBWWWMD5=""
+    LIBMD5DEP=""
+    LIBMD5INC=""
+    AC_CHECK_LIB(c, MD5Init, [ ], 
+	[ AC_CHECK_LIB(md5, MD5Init, [ LWWWMD5="-lmd5"; LIBWWWMD5="-lmd5"], [ AC_MSG_ERROR(Could not find md5 functions. You need to compile in the md5 library.) ] ) ] )
     ;;
   *)
     AC_MSG_RESULT(yes)
     AC_DEFINE(HT_MD5)
+    MD5DIR="md5"
     WWWMD5="libmd5.la"
     LWWWMD5="-lmd5"
     LIBWWWMD5='${top_builddir}/modules/md5/libmd5.la'
+    LIBMD5INC='-I${top_srcdir}/modules/md5'
+    LIBMD5DEP="../../modules/md5/libmd5.la"
     ;;
   esac ],
   AC_MSG_RESULT(yes)
   AC_DEFINE(HT_MD5)
+  MD5DIR="md5"
   WWWMD5="libmd5.la"
   LWWWMD5="-lmd5"
   LIBWWWMD5='${top_builddir}/modules/md5/libmd5.la'
+  LIBMD5INC='-I${top_srcdir}/modules/md5'
+  LIBMD5DEP="../../modules/md5/libmd5.la"
 )
+AC_SUBST(MD5DIR)
 AC_SUBST(WWWMD5)
 AC_SUBST(LWWWMD5)
 AC_SUBST(LIBWWWMD5)
+AC_SUBST(LIBMD5INC)
+AC_SUBST(LIBMD5DEP)
 
-dnl Checks for libwww and OpenSSL:
-AC_MSG_CHECKING(whether we can find OpenSSL)
-dnl find the ssl library dir (empirical)
-if test -d '/usr/local/ssl/lib'; then
-  ssllib="-L/usr/local/ssl/lib -lssl -lcrypto"
-else
-  ssllib="-L/usr/lib -lssl -lcrypto"
-fi
-dnl find the ssl include dir (empirical)
-if test -d '/usr/local/ssl/include'; then
-  sslinc="-I/usr/local/ssl/include"
-elif test -d '/usr/local/openssl/include'; then
-  sslinc="-I/usr/local/openssl/include"
-elif test -d '/usr/local/include/openssl'; then
-  sslinc="-I/usr/local/include/openssl"
-elif test -d '/usr/include/ssl'; then
-  sslinc="-I/usr/include/ssl"
-elif test -d '/usr/include/openssl'; then
-  sslinc="-I/usr/include/openssl"
-else
-  sslinc=""
-fi
+dnl Checks for OpenSSL:
+AC_MSG_CHECKING(whether to support OpenSSL.)
 WWWSSL=""
-SSLINC=""
-LIBSSL=""
 LWWWSSL=""
 LIBWWWSSL=""
 WWWSSLEX=""
@@ -568,14 +568,39 @@
     ;;
   *)
     if test "x$withval" = "xyes"; then
-      withval=$ssllib
-      SSLINC=$sslinc
+      dnl find the ssl library dir (empirical)
+      if test -d '/usr/local/ssl/lib'; then
+        ssllib="-L/usr/local/ssl/lib -lssl -lcrypto"
+      else
+        ssllib="-L/usr/lib -lssl -lcrypto"
+      fi
+      dnl find the ssl include dir (empirical)
+      if test -d '/usr/local/ssl/include'; then
+        sslinc="-I/usr/local/ssl/include"
+      elif test -d '/usr/local/openssl/include'; then
+        sslinc="-I/usr/local/openssl/include"
+      elif test -d '/usr/local/include/openssl'; then
+        sslinc="-I/usr/local/include/openssl"
+      elif test -d '/usr/include/ssl'; then
+        sslinc="-I/usr/include/ssl"
+      elif test -d '/usr/include/openssl'; then
+        sslinc="-I/usr/include/openssl"
+      else
+        sslinc=""
+      fi
+      SSLINC="$sslinc"
+      SSLLIBS="$ssllib"
+    else
+      SSLINC="-I${withval}/include/openssl -I${withval}/include"
+      SSLLIBS="-L${withval}/lib -lssl -lcrypto -Wl,-R${withval}/lib"
     fi
-    LIBS="$LIBS $withval"
+    SAVED_LIBS="${LIBS}"
+    LIBS="${SSLLIBS}"
     AC_TRY_LINK([],
 		[ SSL_library_init(); ],
 		[],
 		[ AC_MSG_ERROR(Could not find the $withval libraries.  You must first install openSSL.) ])
+    LIBS="${SAVED_LIBS}"
     AC_MSG_RESULT(yes)
     WWWSSL="libwwwssl.la"
     LWWWSSL="-lwwwssl" 
@@ -586,6 +611,7 @@
 [ AC_MSG_RESULT(no) ])
 AC_SUBST(WWWSSL)
 AC_SUBST(SSLINC)
+AC_SUBST(SSLLIBS)
 AC_SUBST(LWWWSSL)
 AC_SUBST(LIBWWWSSL)
 AC_SUBST(WWWSSLEX)
@@ -1006,7 +1032,6 @@
 Library/Makefile Library/User/Makefile Library/User/Patch/Makefile
 Library/User/Architecture/Makefile Library/User/Using/Makefile Library/User/Guide/Makefile
 Library/User/Style/Makefile Library/User/Platform/Makefile
-Library/Test/Makefile Library/Test/User/Makefile Library/Test/src/Makefile
 Library/src/Makefile Library/src/windows/Makefile Library/src/vms/Makefile 
 Library/src/SSL/Makefile Library/src/SSL/windows/Makefile
 Library/Examples/Makefile
