$NetBSD: patch-am,v 1.3 2005/08/03 21:01:40 jlam Exp $

--- libraries/libldap/cyrus.c.orig	2005-07-31 22:09:40.000000000 -0400
+++ libraries/libldap/cyrus.c
@@ -848,7 +848,7 @@ ldap_int_sasl_external(
 	LDAP *ld,
 	LDAPConn *conn,
 	const char * authid,
-	ber_len_t ssf )
+	ber_uint_t ssf )
 {
 	int sc;
 	sasl_conn_t *ctx;
@@ -891,6 +891,7 @@ int ldap_pvt_sasl_secprops(
 	char **props = ldap_str2charray( in, "," );
 	unsigned sflags = 0;
 	int got_sflags = 0;
+	int tmp_ssf;
 	sasl_ssf_t max_ssf = 0;
 	int got_max_ssf = 0;
 	sasl_ssf_t min_ssf = 0;
@@ -935,7 +936,8 @@ int ldap_pvt_sasl_secprops(
 		{
 			if( isdigit( (unsigned char) props[i][sizeof("minssf")] ) ) {
 				got_min_ssf++;
-				min_ssf = atoi( &props[i][sizeof("minssf")] );
+				tmp_ssf = atoi( &props[i][sizeof("minssf")] );
+				min_ssf = tmp_ssf >= 0 ? (sasl_ssf_t) tmp_ssf : 0;
 			} else {
 				return LDAP_NOT_SUPPORTED;
 			}
@@ -945,7 +947,8 @@ int ldap_pvt_sasl_secprops(
 		{
 			if( isdigit( (unsigned char) props[i][sizeof("maxssf")] ) ) {
 				got_max_ssf++;
-				max_ssf = atoi( &props[i][sizeof("maxssf")] );
+				tmp_ssf = atoi( &props[i][sizeof("maxssf")] );
+				max_ssf = tmp_ssf >= 0 ? (sasl_ssf_t) tmp_ssf : 0;
 			} else {
 				return LDAP_NOT_SUPPORTED;
 			}
@@ -1049,7 +1052,7 @@ ldap_int_sasl_get_option( LDAP *ld, int 
 				return -1;
 			}
 
-			*(ber_len_t *)arg = *ssf;
+			*(sasl_ssf_t *)arg = *ssf;
 		} break;
 
 		case LDAP_OPT_X_SASL_SSF_EXTERNAL:
@@ -1057,13 +1060,13 @@ ldap_int_sasl_get_option( LDAP *ld, int 
 			return -1;
 
 		case LDAP_OPT_X_SASL_SSF_MIN:
-			*(ber_len_t *)arg = ld->ld_options.ldo_sasl_secprops.min_ssf;
+			*(sasl_ssf_t *)arg = ld->ld_options.ldo_sasl_secprops.min_ssf;
 			break;
 		case LDAP_OPT_X_SASL_SSF_MAX:
-			*(ber_len_t *)arg = ld->ld_options.ldo_sasl_secprops.max_ssf;
+			*(sasl_ssf_t *)arg = ld->ld_options.ldo_sasl_secprops.max_ssf;
 			break;
 		case LDAP_OPT_X_SASL_MAXBUFSIZE:
-			*(ber_len_t *)arg = ld->ld_options.ldo_sasl_secprops.maxbufsize;
+			*(ber_uint_t *)arg = ld->ld_options.ldo_sasl_secprops.maxbufsize;
 			break;
 
 		case LDAP_OPT_X_SASL_SECPROPS:
@@ -1109,7 +1112,7 @@ ldap_int_sasl_set_option( LDAP *ld, int 
 #else
 		memset(&extprops, 0L, sizeof(extprops));
 
-		extprops.ssf = * (ber_len_t *) arg;
+		extprops.ssf = * (sasl_ssf_t *) arg;
 
 		sc = sasl_setprop( ctx, SASL_SSF_EXTERNAL,
 			(void *) &extprops );
@@ -1121,13 +1124,13 @@ ldap_int_sasl_set_option( LDAP *ld, int 
 		} break;
 
 	case LDAP_OPT_X_SASL_SSF_MIN:
-		ld->ld_options.ldo_sasl_secprops.min_ssf = *(ber_len_t *)arg;
+		ld->ld_options.ldo_sasl_secprops.min_ssf = *(sasl_ssf_t *)arg;
 		break;
 	case LDAP_OPT_X_SASL_SSF_MAX:
-		ld->ld_options.ldo_sasl_secprops.max_ssf = *(ber_len_t *)arg;
+		ld->ld_options.ldo_sasl_secprops.max_ssf = *(sasl_ssf_t *)arg;
 		break;
 	case LDAP_OPT_X_SASL_MAXBUFSIZE:
-		ld->ld_options.ldo_sasl_secprops.maxbufsize = *(ber_len_t *)arg;
+		ld->ld_options.ldo_sasl_secprops.maxbufsize = *(ber_uint_t *)arg;
 		break;
 
 	case LDAP_OPT_X_SASL_SECPROPS: {
@@ -1226,7 +1229,7 @@ ldap_int_sasl_external(
 	LDAP *ld,
 	LDAPConn *conn,
 	const char * authid,
-	ber_len_t ssf )
+	ber_uint_t ssf )
 { return LDAP_SUCCESS; }
 
 #endif /* HAVE_CYRUS_SASL */
