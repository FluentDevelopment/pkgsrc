$NetBSD: patch-ad,v 1.7 2006/03/11 08:34:13 adam Exp $

--- bsd.c.orig	2006-03-04 03:52:46.000000000 +0100
+++ bsd.c
@@ -39,14 +39,18 @@
 #include <sys/time.h>
 #include <sys/ioctl.h>
 
+#if (__DragonFly__)
+#include <bus/usb/usb.h>
+#else
 #include <dev/usb/usb.h>
+#endif
 
 #include "usbi.h"
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
-#ifdef HAVE_OLD_DEV_USB_USB_H
+#if defined(HAVE_OLD_DEV_USB_USB_H) && !defined(__DragonFly__)
 /*
  * It appears some of the BSD's (OpenBSD atleast) have switched over to a
  * new naming convention, so we setup some macro's for backward
@@ -403,7 +407,7 @@ int usb_interrupt_write(usb_dev_handle *
 int usb_interrupt_read(usb_dev_handle *dev, int ep, char *bytes, int size,
                        int timeout)
 {
-  int fd, ret, retrieved = 0, one = 1;
+  int fd, ret, retrieved = 0, one = 1, requested;
 
   /* Ensure the endpoint address is correct */
   ep |= USB_ENDPOINT_IN;
@@ -429,7 +433,8 @@ int usb_interrupt_read(usb_dev_handle *d
     USB_ERROR_STR(-errno, "error setting short xfer: %s", strerror(errno));
 
   do {
-    ret = read(fd, bytes+retrieved, size-retrieved);
+    requested = size - retrieved;
+    ret = read(fd, bytes+retrieved, requested);
     if (ret < 0)
 #ifdef __FreeBSD_kernel__
       USB_ERROR_STR(-errno, "error reading from interrupt endpoint %s.%d: %s",
@@ -439,7 +444,7 @@ int usb_interrupt_read(usb_dev_handle *d
                   dev->device->filename, UE_GET_ADDR(ep), strerror(errno));
 #endif
     retrieved += ret;
-  } while (ret > 0 && retrieved < size);
+  } while (ret > 0 && retrieved < size && ret == requested);
 
   return retrieved;
 }
