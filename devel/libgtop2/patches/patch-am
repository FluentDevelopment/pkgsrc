$NetBSD: patch-am,v 1.2 2003/01/21 20:08:10 rh Exp $

--- sysdeps/freebsd/procstate.c.orig	Tue Jun 11 07:34:42 2002
+++ sysdeps/freebsd/procstate.c
@@ -37,11 +37,7 @@ static const unsigned long _glibtop_sysd
 (1L << GLIBTOP_PROC_STATE_GID);
 
 static const unsigned long _glibtop_sysdeps_proc_state_new =
-#if LIBGTOP_VERSION_CODE >= 1001000
-(1L << GLIBTOP_PROC_STATE_RUID) + (1L << GLIBTOP_PROC_STATE_RGID);
-#else
 0;
-#endif
 
 /* Init function. */
 
@@ -82,11 +78,6 @@ glibtop_get_proc_state_p (glibtop *serve
 	buf->uid = pinfo [0].kp_eproc.e_pcred.p_svuid;
 	buf->gid = pinfo [0].kp_eproc.e_pcred.p_svgid;
 
-#if LIBGTOP_VERSION_CODE >= 1001000
-	buf->ruid = pinfo [0].kp_eproc.e_pcred.p_ruid;
-	buf->rgid = pinfo [0].kp_eproc.e_pcred.p_rgid;
-#endif
-
 	/* Set the flags for the data we're about to return*/
 	buf->flags = _glibtop_sysdeps_proc_state |
 		_glibtop_sysdeps_proc_state_new;
@@ -99,9 +90,11 @@ glibtop_get_proc_state_p (glibtop *serve
 	case SRUN:
 		buf->state = GLIBTOP_PROCESS_RUNNING;
 		break;
+#ifdef SSLEEP
 	case SSLEEP:
 		buf->state = GLIBTOP_PROCESS_INTERRUPTIBLE;
 		break;
+#endif
 	case SSTOP:
 		buf->state = GLIBTOP_PROCESS_STOPPED;
 		break;
@@ -119,9 +112,11 @@ glibtop_get_proc_state_p (glibtop *serve
 	case SRUN:
 		buf->state = 'R';
 		break;
+#ifdef SSLEEP
 	case SSLEEP:
 		buf->state = 'S';
 		break;
+#endif
 	case SSTOP:
 		buf->state = 'T';
 		break;
