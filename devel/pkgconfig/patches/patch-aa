$NetBSD: patch-aa,v 1.6 2005/07/13 21:38:26 rillig Exp $

The static variables are needed because they are used in a struct
initializer. The IRIX/mipseb C compiler needs those addresses to be
constant.

--- main.c.orig	Tue Apr 12 13:08:13 2005
+++ main.c	Wed Jul 13 04:26:50 2005
@@ -172,26 +172,26 @@ pkg_uninstalled (Package *pkg)
 int
 main (int argc, char **argv)
 {
-  int want_my_version = 0;
-  int want_version = 0;
-  int want_libs = 0;
-  int want_cflags = 0;
-  int want_l_libs = 0;
-  int want_L_libs = 0;
-  int want_other_libs = 0;
-  int want_I_cflags = 0;
-  int want_other_cflags = 0;
-  int want_list = 0;
-  int want_static_lib_list = ENABLE_INDIRECT_DEPS;
+  static int want_my_version = 0;
+  static int want_version = 0;
+  static int want_libs = 0;
+  static int want_cflags = 0;
+  static int want_l_libs = 0;
+  static int want_L_libs = 0;
+  static int want_other_libs = 0;
+  static int want_I_cflags = 0;
+  static int want_other_cflags = 0;
+  static int want_list = 0;
+  static int want_static_lib_list = ENABLE_INDIRECT_DEPS;
   int result;
-  int want_uninstalled = 0;
-  char *variable_name = NULL;
-  int want_exists = 0;
-  char *required_atleast_version = NULL;
-  char *required_exact_version = NULL;
-  char *required_max_version = NULL;
-  char *required_pkgconfig_version = NULL;
-  int want_silence_errors = 0;
+  static int want_uninstalled = 0;
+  static char *variable_name = NULL;
+  static int want_exists = 0;
+  static char *required_atleast_version = NULL;
+  static char *required_exact_version = NULL;
+  static char *required_max_version = NULL;
+  static char *required_pkgconfig_version = NULL;
+  static int want_silence_errors = 0;
   GString *str;
   GSList *packages = NULL;
   char *search_path;
@@ -278,13 +278,17 @@ main (int argc, char **argv)
       debug_spew ("PKG_CONFIG_DEBUG_SPEW variable enabling debug spew\n");
     }
 
-  search_path = getenv ("PKG_CONFIG_PATH");
+  search_path = getenv("PKG_CONFIG_LIBDIR");
+
+  if (search_path)
+	add_search_dirs(search_path, G_SEARCHPATH_SEPARATOR_S);
+  else {
+	search_path = getenv("PKG_CONFIG_PATH");
   if (search_path) 
-    {
       add_search_dirs(search_path, G_SEARCHPATH_SEPARATOR_S);
-    }
 
   add_search_dirs(PKG_CONFIG_PC_PATH, G_SEARCHPATH_SEPARATOR_S);
+  }
 
 #ifdef G_OS_WIN32
   {
