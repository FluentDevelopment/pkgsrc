$NetBSD: patch-aa,v 1.4 2005/10/06 17:57:49 drochner Exp $

--- configure.py.orig	2005-08-30 19:42:52.000000000 +0200
+++ configure.py
@@ -733,7 +733,7 @@ def check_license():
     print "Type 'no' to decline the terms of the license."
     print
 
-    while 1:
+    while 0:
         try:
             resp = raw_input("Do you accept the terms of the license? ")
         except:
@@ -769,7 +769,7 @@ def create_makefiles():
 
         sipconfig.inform("Creating pyuic Makefile...")
 
-        if prof or "qtxml" not in pyqt_modules:
+        if prof: #or "qtxml" not in pyqt_modules:
             buildfile= "pyuic-prof.sbf"
 
             for xml in ("qdom.cpp", "qxml.cpp"):
@@ -790,7 +790,7 @@ def create_makefiles():
         makefile.extra_defines.append("UIC")
         makefile.extra_defines.append("QT_INTERNAL_XML")
 
-        if prof or "qtxml" not in pyqt_modules:
+        if prof: #or "qtxml" not in pyqt_modules:
             makefile.extra_defines.append("QT_MODULE_XML")
 
         if sipcfg.qt_version < 0x030100:
@@ -801,7 +801,7 @@ def create_makefiles():
 
         sipconfig.inform("Creating pylupdate Makefile...")
 
-        if prof or "qtxml" not in pyqt_modules:
+        if prof: #or "qtxml" not in pyqt_modules:
             buildfile= "pylupdate-prof.sbf"
 
             shutil.copyfile(sipcfg.qt_dir + "/src/xml/qxml.cpp", "pylupdate3/qxml.cpp")
@@ -820,7 +820,7 @@ def create_makefiles():
 
         makefile.extra_defines.append("QT_INTERNAL_XML")
 
-        if prof or "qtxml" not in pyqt_modules:
+        if prof: #or "qtxml" not in pyqt_modules:
             makefile.extra_defines.append("QT_MODULE_XML")
 
         makefile.generate()
@@ -937,26 +937,26 @@ def main(argv):
             sipconfig.error("This version of PyQt requires SIP v%s or later" % sipcfg.version_to_string(minv))
 
     # Check for QScintilla.
-    check_qscintilla()
+#    check_qscintilla()
 
     # Check which modules to build.
-    check_module("qtcanvas", "qcanvas.h", "QCanvas()")
-    check_module("qtnetwork", "qsocket.h", "QSocket()")
-    check_module("qttable", "qtable.h", "QTable()")
-    check_module("qtxml", "qdom.h", "QDomImplementation()")
-    check_module("qtgl", "qgl.h", "QGLWidget()", opengl=1)
+#    check_module("qtcanvas", "qcanvas.h", "QCanvas()")
+#    check_module("qtnetwork", "qsocket.h", "QSocket()")
+#    check_module("qttable", "qtable.h", "QTable()")
+#    check_module("qtxml", "qdom.h", "QDomImplementation()")
+#    check_module("qtgl", "qgl.h", "QGLWidget()", opengl=1)
+
+#    if sipcfg.qt_version >= 0x030000:
+#        check_module("qtui", "qwidgetfactory.h", "QWidgetFactory()", lib="qui")
 
-    if sipcfg.qt_version >= 0x030000:
-        check_module("qtui", "qwidgetfactory.h", "QWidgetFactory()", lib="qui")
-
-        if sipcfg.qt_edition in ("enterprise", "free"):
-            check_module("qtsql", "qsql.h", "QSql()")
+#        if sipcfg.qt_edition in ("enterprise", "free"):
+#            check_module("qtsql", "qsql.h", "QSql()")
 
-            if sys.platform == "win32" and sipcfg.sip_version >= 0x040200:
-                check_module("qtaxcontainer", "qaxobject.h", "QAxObject()", lib="qaxcontainer")
+#            if sys.platform == "win32" and sipcfg.sip_version >= 0x040200:
+#                check_module("qtaxcontainer", "qaxobject.h", "QAxObject()", lib="qaxcontainer")
 
-    if qsci_version:
-        check_module("qtext", "qextscintillabase.h", "QextScintillaBase()", define=qsci_define, include_dir=opt_qsciincdir, lib_dir=opt_qscilibdir, lib="qscintilla")
+#    if qsci_version:
+#        check_module("qtext", "qextscintillabase.h", "QextScintillaBase()", define=qsci_define, include_dir=opt_qsciincdir, lib_dir=opt_qscilibdir, lib="qscintilla")
 
     if opt_qtpetag:
         pyqt_modules.append("qtpe")
