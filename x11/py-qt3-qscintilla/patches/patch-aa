$NetBSD: patch-aa,v 1.2 2004/05/09 17:06:07 recht Exp $

--- configure.py.orig	2004-03-11 20:23:30.000000000 +0100
+++ configure.py	2004-05-09 18:38:38.000000000 +0200
@@ -38,7 +38,7 @@
 sip_min_v3_version = 0x030a01
 sip_min_v4_version = 0x040000
 
-pyqt_modules = ["qt"]
+pyqt_modules = []
 qt_sip_flags = []
 qtext_sip_flags = []
 qtpe_sip_flags = []
@@ -663,7 +663,7 @@
     print "Type 'no' to decline the terms of the license."
     print
 
-    while 1:
+    while 0:
         try:
             resp = raw_input("Do you accept the terms of the license? ")
         except:
@@ -697,82 +697,82 @@
         # The Professional Edition needs special handling.
         prof = (sipcfg.qt_edition == "professional")
 
-        sipconfig.inform("Creating pyuic Makefile...")
+#        sipconfig.inform("Creating pyuic Makefile...")
 
-        if prof:
-            buildfile= "pyuic-prof.sbf"
+#        if prof:
+#            buildfile= "pyuic-prof.sbf"
 
-            for xml in ("qdom.cpp", "qxml.cpp"):
-                shutil.copyfile(sipcfg.qt_dir + "/src/xml/" + xml, "pyuic3/" + xml)
-        else:
-            buildfile= "pyuic.sbf"
-
-        makefile = sipconfig.ProgramMakefile(
-            configuration=sipcfg,
-            build_file=buildfile,
-            dir="pyuic3",
-            install_dir=opt_pyqtbindir,
-            console=1,
-            qt=1,
-            warnings=1
-        )
-
-        makefile.extra_defines.append("UIC")
-        makefile.extra_defines.append("QT_INTERNAL_XML")
-
-        if prof:
-            makefile.extra_defines.append("QT_MODULE_XML")
+#            for xml in ("qdom.cpp", "qxml.cpp"):
+#                shutil.copyfile(sipcfg.qt_dir + "/src/xml/" + xml, "pyuic3/" + xml)
+#        else:
+#            buildfile= "pyuic.sbf"
+
+#        makefile = sipconfig.ProgramMakefile(
+#            configuration=sipcfg,
+#            build_file=buildfile,
+#            dir="pyuic3",
+#            install_dir=opt_pyqtbindir,
+#            console=1,
+#            qt=1,
+#            warnings=1
+#        )
+
+#        makefile.extra_defines.append("UIC")
+#        makefile.extra_defines.append("QT_INTERNAL_XML")
+
+#        if prof:
+#            makefile.extra_defines.append("QT_MODULE_XML")
+
+#        if sipcfg.qt_version < 0x030100:
+#            makefile.extra_include_dirs.append(sipcfg.qt_dir + "/src/3rdparty/zlib")
+
+#        makefile.generate()
+#        subdirs.append("pyuic3")
+
+#        sipconfig.inform("Creating pylupdate Makefile...")
+
+#        if prof:
+#            buildfile= "pylupdate-prof.sbf"
+
+#            shutil.copyfile(sipcfg.qt_dir + "/src/xml/qxml.cpp", "pylupdate3/qxml.cpp")
+#        else:
+#            buildfile= "pylupdate.sbf"
+
+#        makefile = sipconfig.ProgramMakefile(
+#            configuration=sipcfg,
+#            build_file=buildfile,
+#            dir="pylupdate3",
+#            install_dir=opt_pyqtbindir,
+#            console=1,
+#            qt=1,
+#            warnings=1
+#        )
+
+#        makefile.extra_defines.append("QT_INTERNAL_XML")
+
+#        if prof:
+#            makefile.extra_defines.append("QT_MODULE_XML")
+
+#        makefile.generate()
+#        subdirs.append("pylupdate3")
+#    elif sipcfg.qt_version >= 0x020000:
+#        sipconfig.inform("Creating pyuic Makefile...")
+
+#        makefile = sipconfig.ProgramMakefile(
+#            configuration=sipcfg,
+#            build_file="pyuic.sbf",
+#            dir="pyuic2",
+#            install_dir=opt_pyqtbindir,
+#            console=1,
+#            qt=1,
+#            warnings=1
+#        )
 
-        if sipcfg.qt_version < 0x030100:
-            makefile.extra_include_dirs.append(sipcfg.qt_dir + "/src/3rdparty/zlib")
+#        makefile.extra_defines.append("UIC")
+#        makefile.extra_include_dirs.append(sipcfg.qt_dir + "/src/3rdparty/zlib")
 
-        makefile.generate()
-        subdirs.append("pyuic3")
-
-        sipconfig.inform("Creating pylupdate Makefile...")
-
-        if prof:
-            buildfile= "pylupdate-prof.sbf"
-
-            shutil.copyfile(sipcfg.qt_dir + "/src/xml/qxml.cpp", "pylupdate3/qxml.cpp")
-        else:
-            buildfile= "pylupdate.sbf"
-
-        makefile = sipconfig.ProgramMakefile(
-            configuration=sipcfg,
-            build_file=buildfile,
-            dir="pylupdate3",
-            install_dir=opt_pyqtbindir,
-            console=1,
-            qt=1,
-            warnings=1
-        )
-
-        makefile.extra_defines.append("QT_INTERNAL_XML")
-
-        if prof:
-            makefile.extra_defines.append("QT_MODULE_XML")
-
-        makefile.generate()
-        subdirs.append("pylupdate3")
-    elif sipcfg.qt_version >= 0x020000:
-        sipconfig.inform("Creating pyuic Makefile...")
-
-        makefile = sipconfig.ProgramMakefile(
-            configuration=sipcfg,
-            build_file="pyuic.sbf",
-            dir="pyuic2",
-            install_dir=opt_pyqtbindir,
-            console=1,
-            qt=1,
-            warnings=1
-        )
-
-        makefile.extra_defines.append("UIC")
-        makefile.extra_include_dirs.append(sipcfg.qt_dir + "/src/3rdparty/zlib")
-
-        makefile.generate()
-        subdirs.append("pyuic2")
+#        makefile.generate()
+#        subdirs.append("pyuic2")
 
     sipconfig.inform("Creating top level Makefile...")
 
@@ -856,15 +856,15 @@
     check_qscintilla()
 
     # Check which modules to build.
-    check_module("qtcanvas", "qcanvas.h", "QCanvas()")
-    check_module("qtnetwork", "qsocket.h", "QSocket()")
-    check_module("qttable", "qtable.h", "QTable()")
-    check_module("qtxml", "qdom.h", "QDomImplementation()")
-    check_module("qtgl", "qgl.h", "QGLWidget()", opengl=1)
-
-    if sipcfg.qt_version >= 0x030000:
-        check_module("qtsql", "qsql.h", "QSql()")
-        check_module("qtui", "qwidgetfactory.h", "QWidgetFactory()", lib="qui")
+#    check_module("qtcanvas", "qcanvas.h", "QCanvas()")
+#    check_module("qtnetwork", "qsocket.h", "QSocket()")
+#    check_module("qttable", "qtable.h", "QTable()")
+#    check_module("qtxml", "qdom.h", "QDomImplementation()")
+#    check_module("qtgl", "qgl.h", "QGLWidget()", opengl=1)
+
+#    if sipcfg.qt_version >= 0x030000:
+#        check_module("qtsql", "qsql.h", "QSql()")
+#        check_module("qtui", "qwidgetfactory.h", "QWidgetFactory()", lib="qui")
 
     if qsci_version:
         check_module("qtext", "qextscintillabase.h", "QextScintillaBase()", define=qsci_define, include_dir=opt_qsciincdir, lib_dir=opt_qscilibdir, lib="qscintilla")
