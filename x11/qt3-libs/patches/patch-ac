$NetBSD: patch-ac,v 1.2 2002/10/28 08:46:44 skrll Exp $

--- src/tools/qdir_unix.cpp.orig	Thu Oct 17 15:08:58 2002
+++ src/tools/qdir_unix.cpp
@@ -82,10 +82,19 @@ QString QDir::canonicalPath() const
 
 bool QDir::mkdir( const QString &dirName, bool acceptAbsPath ) const
 {
-#if defined(Q_OS_MACX)  // Mac X doesn't support trailing /'s
+#ifdef Q_TRAILING_DIR_SEP  // Some OSes doesn't support trailing /'s
     QString name = dirName;
-    if (dirName[dirName.length() - 1] == "/")
-	name = dirName.left( dirName.length() - 1 );
+    int pos = name.length();
+    if (pos > 0) {
+	while ( (pos - 1) >= 0 && name[pos - 1] == '/' ) {
+	    --pos;
+	};
+	if ( pos == 0 ) {
+	    name = QDir::rootDirPath();
+	} else {
+	    name.truncate( pos );
+	}
+    }
     return QT_MKDIR( QFile::encodeName(filePath(name,acceptAbsPath)), 0777 )
 	== 0;
 #else
@@ -96,7 +105,24 @@ bool QDir::mkdir( const QString &dirName
 
 bool QDir::rmdir( const QString &dirName, bool acceptAbsPath ) const
 {
+#ifdef Q_TRAILING_DIR_SEP  // Some OSes doesn't support trailing /'s
+    QString name = dirName;
+    int pos = name.length();
+    if (pos > 0) {
+	while ( (pos - 1) >= 0 && name[pos - 1] == '/' ) {
+	    --pos;
+	};
+	if ( pos == 0 ) {
+	    name = QDir::rootDirPath();
+	} else {
+	    name.truncate( pos );
+	}
+    }
+    return QT_RMDIR( QFile::encodeName(filePath(name,acceptAbsPath)) )
+	== 0;
+#else
     return QT_RMDIR( QFile::encodeName(filePath(dirName,acceptAbsPath)) ) == 0;
+#endif
 }
 
 bool QDir::isReadable() const
