$NetBSD: patch-aa,v 1.2 2005/12/29 20:29:35 markd Exp $

--- setupext.py.orig	2005-07-06 03:36:37.000000000 +1200
+++ setupext.py
@@ -95,10 +95,8 @@ def temp_copy(_from, _to):
     globals()["_cleanup_"+_to] = CleanUpFile(_to)
 
 def add_base_flags(module):
-    incdirs = [os.path.join(p, 'include') for p in basedir[sys.platform]
-               if os.path.exists(p)]
-    libdirs = [os.path.join(p, 'lib')     for p in basedir[sys.platform]
-               if os.path.exists(p)]
+    incdirs = os.path.join(os.environ['LOCALBASE'], 'include')
+    libdirs = os.path.join(os.environ['LOCALBASE'], 'lib')
     module.include_dirs.extend(incdirs)
     module.library_dirs.extend(libdirs)
 
@@ -408,22 +406,6 @@ def build_agg(ext_modules, packages, num
            'agg_rasterizer_scanline_aa.cpp',
            )
 
-    if numerix in ["numarray","both"]: # Build for numarray
-        deps = ['%s/src/%s'%(AGG_VERSION,name) for name in agg]
-        deps.extend(('src/ft2font.cpp', 'src/mplutils.cpp'))
-        deps.extend(glob.glob('CXX/*.cxx'))
-        deps.extend(glob.glob('CXX/*.c'))
-        temp_copy('src/_backend_agg.cpp', 'src/_na_backend_agg.cpp')
-        deps.append('src/_na_backend_agg.cpp')
-        module = Extension(
-            'matplotlib.backends._na_backend_agg',
-            deps,
-            include_dirs=numarray_inc_dirs,
-            )    
-        module.extra_compile_args.append('-DNUMARRAY=1')
-        add_agg_flags(module)
-        add_ft2font_flags(module)
-        ext_modules.append(module)    
     if numerix in ["Numeric","both"]: # Build for Numeric
         deps = ['%s/src/%s'%(AGG_VERSION, name) for name in agg]
         deps.extend(('src/ft2font.cpp', 'src/mplutils.cpp'))
@@ -456,21 +438,6 @@ def build_image(ext_modules, packages, n
            'agg_bezier_arc.cpp',
            )
 
-    if numerix in ["numarray","both"]: # Build for numarray
-        temp_copy('src/_image.cpp', 'src/_na_image.cpp')
-        deps = ['src/_na_image.cpp', 'src/mplutils.cpp'] 
-        deps.extend(['%s/src/%s'%(AGG_VERSION, name) for name in agg])
-        deps.extend(glob.glob('CXX/*.cxx'))
-        deps.extend(glob.glob('CXX/*.c'))
-        module = Extension(
-            'matplotlib._na_image',
-            deps,
-            include_dirs=numarray_inc_dirs,
-            )    
-        module.extra_compile_args.append('-DNUMARRAY=1')
-        add_agg_flags(module)
-        ext_modules.append(module)    
-
     if numerix in ["Numeric","both"]: # Build for Numeric
         temp_copy('src/_image.cpp', 'src/_nc_image.cpp')
         deps = ['src/_nc_image.cpp', 'src/mplutils.cpp'] 
@@ -514,21 +481,6 @@ def build_swigagg(ext_modules, packages)
     ext_modules.append(agg)
 
 def build_transforms(ext_modules, packages, numerix):
-    if numerix in ["numarray","both"]: # Build for numarray
-        cxx = glob.glob('CXX/*.cxx')
-        cxx.extend(glob.glob('CXX/*.c'))
-        temp_copy("src/_transforms.cpp","src/_na_transforms.cpp")
-        module = Extension('matplotlib._na_transforms',
-                             ['src/_na_transforms.cpp',
-                              'src/mplutils.cpp'] + cxx,
-                             libraries = ['stdc++', 'm'],
-                             include_dirs = ['src', '.']+numarray_inc_dirs,
-                             )
-        
-        module.extra_compile_args.append("-DNUMARRAY=1")
-        add_base_flags(module)
-        ext_modules.append(module)
-        
     if numerix in ["Numeric","both"]:  # Build for Numeric
         cxx = glob.glob('CXX/*.cxx')
         cxx.extend(glob.glob('CXX/*.c'))
@@ -563,18 +515,6 @@ def build_contour(ext_modules, packages,
     global BUILT_CONTOUR
     if BUILT_CONTOUR: return # only build it if you you haven't already
 
-    if numerix in ["numarray","both"]: # Build for numarray
-        temp_copy('src/cntr.c', 'src/_na_cntr.c')
-        module = Extension(
-            'matplotlib._na_cntr',
-            [  'src/_na_cntr.c',],
-            #libraries = ['stdc++'],
-            include_dirs=numarray_inc_dirs,
-            )
-        module.extra_compile_args.append('-DNUMARRAY=1')
-        add_base_flags(module)
-        ext_modules.append(module)    
-
     if numerix in ["Numeric","both"]: # Build for Numeric
         temp_copy('src/cntr.c', 'src/_nc_cntr.c')
         module = Extension(
@@ -593,19 +533,6 @@ def build_gdk(ext_modules, packages, num
     global BUILT_GDK
     if BUILT_GDK: return # only build it if you you haven't already
 
-    if numerix in ["numarray","both"]: # Build for numarray
-        temp_copy('src/_backend_gdk.c', 'src/_na_backend_gdk.c')
-        module = Extension(
-            'matplotlib.backends._na_backend_gdk',
-            ['src/_na_backend_gdk.c', ],
-            libraries = [],
-            include_dirs=numarray_inc_dirs,
-            )
-        module.extra_compile_args.append('-DNUMARRAY=1')
-        add_base_flags(module)
-        add_pygtk_flags(module)        
-        ext_modules.append(module)
-
     if numerix in ["Numeric","both"]: # Build for Numeric
         temp_copy('src/_backend_gdk.c', 'src/_nc_backend_gdk.c')
         module = Extension(
