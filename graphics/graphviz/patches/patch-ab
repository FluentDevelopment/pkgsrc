$NetBSD: patch-ab,v 1.9 2004/12/24 18:26:57 seb Exp $

--- configure.ac.orig	2004-12-11 20:38:20.000000000 +0000
+++ configure.ac
@@ -36,7 +36,10 @@ case "${target_os}" in
 	PATHSEPARATOR=":"
 	;;
   * ) # This sucks!  Whatever happened to standards for file system layout?
-	DEFAULT_FONTPATH="/usr/X11R6/lib/X11/fonts/TrueType:/usr/X11R6/lib/X11/fonts/truetype:/usr/X11R6/lib/X11/fonts/TTF:/usr/share/fonts/TrueType:/usr/share/fonts/truetype:/usr/openwin/lib/X11/fonts/TrueType:/usr/X11R6/lib/X11/fonts/Type1:/usr/common/share/fonts/ttf";
+	DEFAULT_FONTPATH="${X11PREFIX}/lib/X11/fonts/TrueType:${X11PREFIX}/lib/X11/fonts/truetype:${X11PREFIX}/lib/X11/fonts/TTF:/usr/share/fonts/TrueType:/usr/share/fonts/truetype:/usr/openwin/lib/X11/fonts/TrueType:/usr/X11R6/lib/X11/fonts/Type1:/usr/common/share/fonts/ttf";
+	if test x"$X11PREFIX" != x"$X11BASE"; then
+		DEFAULT_FONTPATH="${DEFAULT_FONTPATH}:${X11BASE}/lib/X11/fonts/TrueType:${X11BASE}/lib/X11/fonts/truetype:${X11BASE}/lib/X11/fonts/TTF:${X11BASE}/lib/X11/fonts/Type1"
+	fi
 	PATHSEPARATOR=":"
 	;;
 esac
@@ -217,75 +220,12 @@ dnl INCLUDES and LIBS for TCL
 # start by assuming we have it
 HAVE_TCL=1 
 
-AC_ARG_WITH(tclsh,
-    [  --with-tclsh=PROG       build graphviz for specific tclsh],
-    TCLSH=$withval,)
-
-if test "x$TCLSH" = "x"; then
-    AC_PATH_PROG(TCLSH,tclsh8.4)
-    if test "x$TCLSH" = "x"; then
-        AC_PATH_PROG(TCLSH,tclsh8.3)
-        if test "x$TCLSH" = "x"; then
-            AC_PATH_PROG(TCLSH,tclsh)
-        fi
-    fi
-fi
-
-if test "x$TCLSH" = "x"; then
-    AC_MSG_WARN([Unable to find a tclsh. The Tcl packages will not be built])
-    HAVE_TCL=0
-fi
-
-if test "$HAVE_TCL" = "1"; then
-    TCL_VERSION_FOUND=`echo 'puts [[info tclversion]]' | $TCLSH`
-
-    # can't assume ksh on all architectures
-    # TCLSH_EXEC_PREFIX=${TCLSH%%/bin/tclsh.*}
-    # so use sed instead
-    TCLSH_EXEC_PREFIX=`echo $TCLSH|sed -e 's%/bin/tclsh.*$%%'`
-
-    if test -f ${TCLSH_EXEC_PREFIX}/include/tcl${TCL_VERSION_FOUND}/tcl.h; then
-        TCL_INCLUDES="-I${TCLSH_EXEC_PREFIX}/include/tcl${TCL_VERSION_FOUND} -I${TCLSH_EXEC_PREFIX}/include/tcl${TCL_VERSION_FOUND}/generic"
-    else
-        if test "x${TCLSH_EXEC_PREFIX}" != "x/usr" -a -f ${TCLSH_EXEC_PREFIX}/include/tcl.h; then
-            TCL_INCLUDES=-I${TCLSH_EXEC_PREFIX}/include
-        fi
-    fi
-    if test "x$TCL_INCLUDES" != "x" ; then
-        AC_MSG_RESULT([using tcl headers from $TCL_INCLUDES])
-    fi
+. ${TCLCONFIG}
+TCL_INCLUDES=${TCL_INCLUDE_SPEC}
     AC_SUBST(TCL_INCLUDES)
-    save_CPPFLAGS=$CPPFLAGS
-    CPPFLAGS="$CPPFLAGS $TCL_INCLUDES"
     AC_CHECK_HEADER(tcl.h,,[
         AC_MSG_WARN([Unable to find header tcl.h. The Tcl packages will not be built])
         HAVE_TCL=0])
-    CPPFLAGS=$save_CPPFLAGS
-fi
-
-if test "$HAVE_TCL" = "1"; then
-    # Some systems don't have Tcl.  Don't build
-    # the Tcl products if we don't have the library.
-    if test -f ${TCLSH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tcl${TCL_VERSION_FOUND}/tclConfig.sh; then
-        TCLCONFIG=${TCLSH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tcl${TCL_VERSION_FOUND}/tclConfig.sh
-    else
-        if test -f ${TCLSH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tclConfig.sh; then
-            TCLCONFIG=${TCLSH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tclConfig.sh
-        else
-            if test -f ${TCLSH_EXEC_PREFIX}/lib/tclConfig.sh; then
-                TCLCONFIG=${TCLSH_EXEC_PREFIX}/lib/tclConfig.sh
-            fi
-        fi
-    fi
-    if test "x$TCLCONFIG" != "x"; then
-        AC_MSG_RESULT([using $TCLCONFIG])
-        file=${TCLCONFIG}
-            . $file
-    else
-        AC_MSG_WARN([Unable to find tclConfig.sh. The Tcl packages will not be built])
-        HAVE_TCL=0
-    fi
-fi
 
 if test "$HAVE_TCL" = "1"; then
     # TCL STUBS support is required
@@ -369,80 +309,13 @@ fi
 
 HAVE_TK=$HAVE_TCL
                                                                                 
-if test "$HAVE_TK" = "1"; then
-    AC_ARG_WITH(wish,
-        [  --with-wish=PROG        build graphviz for specific wish],
-        WISH=$withval,)
-    if test "x$WISH" = "x"; then
-        AC_PATH_PROG(WISH,wish8.4)
-        if test "x$WISH" = "x"; then
-    	    AC_PATH_PROG(WISH,wish8.3)
-    	    if test "x$WISH" = "x"; then
-                AC_PATH_PROG(WISH,wish)
-            fi
-        fi
-    fi
-    if test "x$WISH" = "x"; then
-        AC_MSG_WARN([Unable to find a wish. The Tk packages will not be built])
-        HAVE_TK=0
-    fi
-fi
-
-if test "$HAVE_TK" = "1"; then
-    #TK_VERSION_FOUND=`echo 'puts [[info tkversion]]' | $WISH`
-    #
-    # No such var as tkversion.  Use tclversion instead.
-    TK_VERSION_FOUND=${TCL_VERSION_FOUND}
-    
-    # can't assume ksh on all architectures
-    # WISH_EXEC_PREFIX=${WISH%%/bin/tclsh.*}
-    # so use sed instead
-    WISH_EXEC_PREFIX=`echo $WISH|sed -e 's%/bin/wish.*$%%'`
-
-    if test -f ${WISH_EXEC_PREFIX}/include/tk${TK_VERSION_FOUND}/tk.h; then
-	TK_INCLUDES="-I${WISH_EXEC_PREFIX}/include/tk${TK_VERSION_FOUND} -I${WISH_EXEC_PREFIX}/include/tk${TK_VERSION_FOUND}/generic"
-    else
-        if test "x${WISH_EXEC_PREFIX}" != "x/usr" -a -f ${WISH_EXEC_PREFIX}/include/tk.h; then
-	    TK_INCLUDES=-I${WISH_EXEC_PREFIX}/include
-        fi
-    fi
-    if test "x$TK_INCLUDES" != "x" ; then
-	AC_MSG_RESULT([using tk headers from $TK_INCLUDES])
-    fi
+. ${TKCONFIG}
+TK_INCLUDES="-I${TK_PREFIX}/include"
     AC_SUBST(TK_INCLUDES)
-    save_CPPFLAGS=$CPPFLAGS
-    CPPFLAGS="$CPPFLAGS $TCL_INCLUDES $TK_INCLUDES $X_CFLAGS"
     AC_CHECK_HEADER(tk.h,,[
         AC_MSG_WARN([Unable to find header tk.h. The Tk packages will not be built])
         HAVE_TK=0])
-    CPPFLAGS=$save_CPPFLAGS
-fi
 
-if test "$HAVE_TK" = "1"; then
-    # Some systems don't have Tcl.  Don't build
-    # Some systems have Tcl, but not Tk.  Don't build
-    # the Tk products if we don't have the library.
-    if test -f ${WISH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tk${TK_VERSION_FOUND}/tkConfig.sh; then
-        TKCONFIG=${WISH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tk${TK_VERSION_FOUND}/tkConfig.sh
-    else
-        if test -f ${WISH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tkConfig.sh; then
-	    TKCONFIG=${WISH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tkConfig.sh
-	else
-            if test -f ${WISH_EXEC_PREFIX}/lib/tkConfig.sh; then
-	        TKCONFIG=${WISH_EXEC_PREFIX}/lib/tkConfig.sh
-            fi
-        fi
-    fi
-    if test "x$TKCONFIG" != "x"; then
-        AC_MSG_RESULT([using $TKCONFIG])
-        file=${TKCONFIG}
-        . $file
-    else
-        AC_MSG_WARN([Unable to find tkConfig.sh. The Tk packages will not be built])
-        HAVE_TK=0
-    fi
-fi
-                                                                                
 #if test "$HAVE_TK" = "1"; then
 #    # TK STUBS support is required (but support is indicated by TCL_SUPPORTS_STUBS)
 #    if test "x${TCL_SUPPORTS_STUBS}" != "x1"; then
@@ -1050,36 +923,12 @@ AC_MSG_RESULT(no)])
 
 # -----------------------------------
 # tclInt.h
-if test -f "$TCL_SRC_DIR/generic/tclInt.h"; then
-TCLINT_INCLUDES="-I$TCL_SRC_DIR/generic"
-else
-if test -f "/usr/include/tclInt.h"; then
-TCLINT_INCLUDES=""
-else
-if test -f "/usr/local/include/tclInt.h"; then
-TCLINT_INCLUDES="-I/usr/local/include"
-else
-TCLINT_INCLUDES="-I$TOP_DIR/tclstubs"
-fi
-fi
-fi
+TCLINT_INCLUDES="-I${TCL_PREFIX}/include/tcl/generic"
 AC_SUBST(TCLINT_INCLUDES)
 
 # -----------------------------------
 # tkInt.h
-if test -f "$TK_SRC_DIR/generic/tkInt.h"; then
-TKINT_INCLUDES="-I$TK_SRC_DIR/generic"
-else
-if test -f "/usr/include/tkInt.h"; then
-TKINT_INCLUDES=""
-else
-if test -f "/usr/local/include/tkInt.h"; then
-TKINT_INCLUDES="-I/usr/local/include"
-else
-TKINT_INCLUDES="-I$TOP_DIR/tkstubs"
-fi
-fi
-fi
+TKINT_INCLUDES="-I${TK_PREFIX}/include/tk/generic"
 AC_SUBST(TKINT_INCLUDES)
 
 # -----------------------------------
