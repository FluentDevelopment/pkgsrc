$NetBSD: patch-ac,v 1.6 2006/05/31 13:52:54 tron Exp $

--- ksvg/plugin/backends/libart/GlyphTracerLibart.cpp.orig	2005-10-11 03:56:46.000000000 +1300
+++ ksvg/plugin/backends/libart/GlyphTracerLibart.cpp
@@ -29,9 +29,17 @@
 
 #include <libart_lgpl/art_bpath.h>
 
+#include <config.h>
+
+#if 1 /* def HAVE_FREETYPE_2_2_x */
+  #define FT_VECTOR_PARAMETER const FT_Vector
+#else
+  #define FT_VECTOR_PARAMETER FT_Vector
+#endif
+
 using namespace T2P;
 
-int traceMoveto(FT_Vector *to, void *obj)
+int traceMoveto(FT_VECTOR_PARAMETER *to, void *obj)
 {
 	Glyph *glyph = reinterpret_cast<Glyph *>(obj);
 	Affine &affine = glyph->affine();
@@ -52,7 +60,7 @@ int traceMoveto(FT_Vector *to, void *obj
 	return 0;
 }
 
-int traceLineto(FT_Vector *to, void *obj)
+int traceLineto(FT_VECTOR_PARAMETER *to, void *obj)
 {
 	Glyph *glyph = reinterpret_cast<Glyph *>(obj);
 	Affine &affine = glyph->affine();
@@ -73,7 +81,7 @@ int traceLineto(FT_Vector *to, void *obj
 	return 0;
 }
 
-int traceConicBezier(FT_Vector *control, FT_Vector *to, void *obj)
+int traceConicBezier(FT_VECTOR_PARAMETER *control, FT_VECTOR_PARAMETER *to, void *obj)
 {
 	Glyph *glyph = reinterpret_cast<Glyph *>(obj);
 	Affine &affine = glyph->affine();
@@ -102,7 +110,7 @@ int traceConicBezier(FT_Vector *control,
 	return 0;
 }
 
-int traceCubicBezier(FT_Vector *control1, FT_Vector *control2, FT_Vector *to, void *obj)
+int traceCubicBezier(FT_VECTOR_PARAMETER *control1, FT_VECTOR_PARAMETER *control2, FT_VECTOR_PARAMETER *to, void *obj)
 {
 	Glyph *glyph = reinterpret_cast<Glyph *>(obj);
 	Affine &affine = glyph->affine();
