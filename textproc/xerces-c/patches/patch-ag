$NetBSD: patch-ag,v 1.2 2003/06/23 07:52:42 jlam Exp $

--- util/Transcoders/ICU/ICUTransService.cpp.orig	Thu Mar  7 14:45:34 2002
+++ util/Transcoders/ICU/ICUTransService.cpp
@@ -69,7 +69,7 @@
 #include "ICUTransService.hpp"
 #include <string.h>
 #include <unicode/uloc.h>
-#include <unicode/unicode.h>
+#include <unicode/uchar.h>
 #include <unicode/ucnv.h>
 #include <unicode/ucnv_err.h>
 #include <unicode/ustring.h>
@@ -188,7 +188,7 @@ int ICUTransService::compareIString(cons
         //  larger than 0xFFFF, so our cast here will work for both possible
         //  sizes of XMLCh.
         //
-        if (Unicode::toUpperCase(UChar(*psz1)) != Unicode::toUpperCase(UChar(*psz2)))
+        if (u_toupper(UChar(*psz1)) != u_toupper(UChar(*psz2)))
             return int(*psz1) - int(*psz2);
 
         // If either has ended, then they both ended, so equal
@@ -219,7 +219,7 @@ int ICUTransService::compareNIString(con
         //  larger than 0xFFFF, so our cast here will work for both possible
         //  sizes of XMLCh.
         //
-        if (Unicode::toUpperCase(UChar(*psz1)) != Unicode::toUpperCase(UChar(*psz2)))
+        if (u_toupper(UChar(*psz1)) != u_toupper(UChar(*psz2)))
             return int(*psz1) - int(*psz2);
 
         // If either ended, then both ended, so equal
@@ -263,7 +263,7 @@ bool ICUTransService::isSpace(const XMLC
     {
         return true;
     }
-    return (Unicode::isSpaceChar(UChar(toCheck)) != 0);
+    return (u_isspace(UChar(toCheck)) != 0);
 }
 
 
@@ -296,7 +296,7 @@ void ICUTransService::upperCase(XMLCh* c
     XMLCh* outPtr = toUpperCase;
     while (*outPtr)
     {
-        *outPtr = XMLCh(Unicode::toUpperCase(UChar(*outPtr)));
+        *outPtr = XMLCh(u_toupper(UChar(*outPtr)));
         outPtr++;
     }
 }
