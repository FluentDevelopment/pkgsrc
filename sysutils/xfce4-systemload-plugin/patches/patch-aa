$NetBSD: patch-aa,v 1.3 2007/01/19 16:28:15 joerg Exp $

--- panel-plugin/memswap.c.orig	2003-11-06 00:39:52.000000000 +0000
+++ panel-plugin/memswap.c
@@ -113,7 +113,7 @@ gint read_memswap(gulong *mem, gulong *s
     return 0;
 }
 
-#elif defined(__FreeBSD__)
+#elif defined(__FreeBSD__) || defined(__DragonFly__)
 /*
  * This is inspired by /usr/src/usr.bin/top/machine.c 
  *
@@ -284,7 +284,24 @@ gint read_memswap(gulong *mem, gulong *s
 
 #define ARRLEN(X) (sizeof(X)/sizeof(X[0]))
     {
-        static int mib[]={ CTL_HW, HW_PHYSMEM };
+        static int mib[2];
+
+#ifdef HW_PHYSMEM64
+        /* 64-bit datatype */
+        if (sizeof(size_t) == 8) {
+                mib[0] = CTL_HW;
+                mib[1] = HW_PHYSMEM64;
+        }
+        /* assume 32-bit datatype */
+        else {
+                mib[0] = CTL_HW;
+                mib[1] = HW_PHYSMEM;
+        }
+#else
+        mib[0] = CTL_HW;
+        mib[1] = HW_PHYSMEM;
+#endif
+
         len = sizeof(MTotal);
         sysctl(mib, ARRLEN(mib), &MTotal, &len, NULL, 0);
         MTotal >>= 10;
@@ -395,7 +412,24 @@ gint read_memswap(gulong *mem, gulong *s
 
 #define ARRLEN(X) (sizeof(X)/sizeof(X[0]))
     {
-        static int mib[]={ CTL_HW, HW_PHYSMEM };
+        static int mib[2];
+
+#ifdef HW_PHYSMEM64
+        /* 64-bit datatype */
+        if (sizeof(size_t) == 8) {
+                mib[0] = CTL_HW;
+                mib[1] = HW_PHYSMEM64;
+        }
+        /* assume 32-bit datatype */
+        else {
+                mib[0] = CTL_HW;
+                mib[1] = HW_PHYSMEM;
+        }
+#else
+        mib[0] = CTL_HW;
+        mib[1] = HW_PHYSMEM;
+#endif
+
         len = sizeof(MTotal);
         sysctl(mib, ARRLEN(mib), &MTotal, &len, NULL, 0);
         MTotal >>= 10;
