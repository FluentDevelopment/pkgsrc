$NetBSD: patch-ab,v 1.20 2003/05/03 16:55:29 atatat Exp $

--- dialects/n+obsd/dnode.c.orig	2003-03-23 14:26:47.000000000 -0500
+++ dialects/n+obsd/dnode.c
@@ -200,6 +200,22 @@ process_node(va)
 
 #endif	/* defined(HASFDESCFS) */
 
+#if	defined(HASEXT2FS)
+# if	defined(HASI_E2FS_PTR)
+	struct ext2fs_dinode ed;
+# endif	/* defined(HASI_E2FS_PTR) */
+	struct ext2fs_dinode *edp = (struct ext2fs_dinode *)NULL;
+#endif	/* defined(HASEXT2FS) */
+
+#if	defined(HASI_FFS1)
+	unsigned char ffs = 0;
+	unsigned char u1s = 0;
+	unsigned char u2s = 0;
+	struct ufs1_dinode u1;
+	struct ufs2_dinode u2;
+	struct ufsmount um;
+#endif	/* defined(HASI_FFS1) */
+
 #if	defined(HASKERNFS)
 	struct kernfs_node kn;
 	struct stat ksb;
@@ -262,6 +278,14 @@ process_overlaid_node:
 	ksbs = 0;
 #endif	/* defined(HASKERNFS) */
 
+#if	defined(HASEXT2FS)
+	edp = (struct ext2fs_dinode *)NULL;
+#endif	/* defined(HASEXT2FS) */
+
+#if	defined(HASI_FFS1)
+	ffs = u1s = u2s = 0;
+#endif	/* defined(HASI_FFS1) */
+
 /*
  * Read the vnode.
  */
@@ -503,12 +527,51 @@ process_overlaid_node:
 	    }
 
 #if	defined(HASEXT2FS)
-	    if (v->v_tag == VT_EXT2FS)
+	    if (v->v_tag == VT_EXT2FS) {
 		nty = EXT2NODE;
-	    else
+
+# if	defined(HASI_E2FS_PTR)
+		if (i.i_din.e2fs_din
+		&&  !kread((KA_T)i.i_din.e2fs_din, (char *)&ed, sizeof(ed)))
+		    edp = &ed;
+# else	/* !defined(HASI_E2FS_PTR) */
+		edp = &i.i_din.e2fs_din;
+# endif	/* defined(HASI_E2FS_PTR) */
+
+	    } else
 #endif	/* defined(HASEXT2FS) */
 
+	    {
 		nty = INODE;
+
+#if	defined(HASI_FFS1)
+		/*
+		 * If there are multiple FFS's, read the relevant structures.
+		 */
+		    if (i.i_ump
+		    &&  !kread((KA_T)i.i_ump, (char *)&um, sizeof(um))) {
+			if (um.um_fstype == UFS1) {
+			    ffs = 1;
+			    if (i.i_din.ffs1_din
+			    &&  !kread((KA_T)i.i_din.ffs1_din, (char *)&u1,
+				       sizeof(u1)))
+			    {
+				u1s = 1;
+			    }
+			} else if (um.um_fstype == UFS2) {
+			    ffs = 2;
+			    if (i.i_din.ffs2_din
+			    &&  !kread((KA_T)i.i_din.ffs2_din, (char *)&u2,
+				       sizeof(u2)))
+			    {
+				u2s = 1;
+			    }
+			}
+		    }
+#endif	/* defined(HASI_FFS1) */
+
+	    }
+
 	    if ((lff = i.i_lockf)) {
 
 	    /*
@@ -609,18 +672,21 @@ process_overlaid_node:
 #if	defined(HASEXT2FS)
 	case EXT2NODE:
 
-# if	defined(HASI_FFS)
-	    dev = i.i_dev;
-	    devs = 1;
-# else	/* !defined(HASI_FFS) */
 	    dev = i.i_dev;
 	    devs = 1;
 	    if ((type == VCHR) || (type == VBLK)) {
-		rdev = i.i_rdev;
+
+# if	defined(HASI_E2FS_PTR)
+		if (edp) {
+		    rdev = edp->e2di_rdev;
+		    rdevs = 1;
+		}
+# else	/* !defined(HASI_E2FS_PTR) */
+		rdev = i.i_din.e2fs_din.e2di_rdev;
 		rdevs = 1;
-	    }
-# endif	/* defined(HASI_FFS) */
+# endif	/* defined(HASI_E2FS_PTR) */
 
+	    }
 	    break;
 #endif	/* defined(HASEXT2FS) */
 
@@ -631,11 +697,26 @@ process_overlaid_node:
 
 #if	defined(HASI_FFS)
 		rdev = i.i_ffs_rdev;
+		rdevs = 1;
 #else	/* !defined(HASI_FFS) */
+# if	defined(HASI_FFS1)
+		if (ffs == 1) {
+		    if (u1s) {
+			rdev = u1.di_rdev;
+			rdevs = 1;
+		    }
+		} else if (ffs == 2) {
+		    if (u2s) {
+			rdev = u2.di_rdev;
+			rdevs = 1;
+		    }
+		}
+# else	/* !defined(HASI_FFS1) */
 		rdev = i.i_rdev;
+		rdevs = 1;
+# endif	/* defined(HASI_FFS1) */
 #endif	/* defined(HASI_FFS) */
 
-		rdevs = 1;
 	    }
 	    break;
 
@@ -807,11 +888,26 @@ process_overlaid_node:
 
 #if	defined(HASI_FFS)
 			Lf->sz = (SZOFFTYPE)i.i_ffs_size;
+			Lf->sz_def = 1;
 #else	/* !defined(HASI_FFS) */
+# if	defined(HASI_FFS1)
+			if (ffs == 1) {
+			    if (u1s) {
+				Lf->sz = (SZOFFTYPE)u1.di_size;
+				Lf->sz_def = 1;
+			    }
+			} else if (ffs == 2) {
+			    if (u2s) {
+				Lf->sz = (SZOFFTYPE)u2.di_size;
+				Lf->sz_def = 1;
+			    }
+			}
+# else	/* !defined(HASI_FFS1) */
 			Lf->sz = (SZOFFTYPE)i.i_size;
+			Lf->sz_def = 1;
+# endif	/* defined(HASI_FFS1) */
 #endif	/* defined(HASI_FFS) */
 
-			Lf->sz_def = 1;
 		    }
 
 #if	defined(HASMSDOSFS)
@@ -828,14 +924,15 @@ process_overlaid_node:
 
 #if	defined(HASEXT2FS)
 		    else if (nty == EXT2NODE) {
-
-# if	defined(HASI_E2FS)
+# if	defined(HASI_E2FS_PTR)
+			if (edp) {
+			    Lf->sz = (SZOFFTYPE)edp->e2di_size;
+			    Lf->sz_def = 1;
+			}
+# else	/* !defined(HASI_E2FS_PTR) */
 			Lf->sz = (SZOFFTYPE)i.i_e2fs_size;
-# else	/* !defined(HASI_E2FS) */
-			Lf->sz = (SZOFFTYPE)i.i_size;
-# endif	/* defined(HASI_E2FS) */
-
 			Lf->sz_def = 1;
+# endif	/* defined(HASI_E2FS_PTR) */
 		    }
 #endif	/* defined(HASEXT2FS) */
 
@@ -880,8 +977,24 @@ process_overlaid_node:
 
 # if	defined(HASI_FFS)
 		    Lf->nlink = (long)i.i_ffs_nlink;
+		    Lf->nlink_def = 1;
 # else	/* !defined(HASI_FFS) */
+#  if	defined(HASI_FFS1)
+		    if (ffs == 1) {
+			if (u1s) {
+			    Lf->nlink = (long)u1.di_nlink;
+			    Lf->nlink_def = 1;
+			}
+		    } else if (ffs == 2) {
+			if (u2s) {
+			    Lf->nlink = (long)u2.di_nlink;
+			    Lf->nlink_def = 1;
+			}
+		    }
+#  else	/* !defined(HASI_FFS1) */
 		    Lf->nlink = (long)i.i_nlink;
+		    Lf->nlink_def = 1;
+#  endif	/* defined(HASI_FFS1) */
 # endif	/* defined(HASI_FFS) */
 
 		    Lf->nlink_def = 1;
@@ -897,8 +1010,15 @@ process_overlaid_node:
 
 #if	defined(HASEXT2FS)
 		else if (nty == EXT2NODE) {
-		    Lf->nlink - (long)i.i_e2fs_nlink;
+# if	defined(HASI_E2FS_PTR)
+		    if (edp) {
+			Lf->nlink = (long)edp->e2di_nlink;
+			Lf->nlink_def = 1;
+		    }
+# else	/* !defined(HASI_E2FS_PTR) */
+		    Lf->nlink = (long)i.i_e2fs_nlink;
 		    Lf->nlink_def = 1;
+# endif	/* defined(HASI_E2FS_PTR) */
 		}
 #endif	/* defined(HASEXT2FS) */
 
