$NetBSD: patch-ac,v 1.21 2004/11/30 02:02:13 atatat Exp $

Incorporate a patch from the author that widens the NETBSDV definition
to account for new current versioning system, properly handles the
sys/bufq.h mess, adds a bit more to procfs support, and adds ptyfs
support.

--- Configure.orig	2004-10-19 15:36:21.000000000 -0400
+++ Configure
@@ -161,6 +161,7 @@ LSOF_TSTK64=0
 LSOF_TSTKMEM=1
 LSOF_TSTLFF="${LSOF_TSTSUBD}/config.ldflags"
 LSOF_TSTLFLG=""
+LSOF_TSTVPATH=0
 LSOF_TSTXO=""
 LSOF_TSTXOC="${LSOF_TSTSUBD}/config.xobj"
 if test "X$LSOF_VERS" = "X"	# {
@@ -2264,51 +2265,49 @@ return(0); }
       # Validate the NetBSD version.
 
       case $LSOF_VSTR in	# {
-      1.0*)
-	LSOF_VERS="1000"
-	;;
-      1.1*)
-	LSOF_VERS="1010"
-	;;
       1.2*)
-	LSOF_VERS="1020"
+	LSOF_VERS="1002000"
 	;;
       1.3*)
-	LSOF_VERS="1030"
+	LSOF_VERS="1003000"
 	;;
       1.4*)
-	LSOF_VERS="1040"
+	LSOF_VERS="1004000"
 	;;
       1.5*)
 	LSOF_TSTBIGF=" "
-	LSOF_VERS="1050"
+	LSOF_VERS="1005000"
 	;;
       1.6*)
 	LSOF_TSTBIGF=" "
-	LSOF_VERS="1060"
+	LSOF_VERS="1006000"
 	;;
       1*)
-	LSOF_VERS=1060
+	LSOF_VERS="1006000"
 	echo "!!!WARNING!!!  Unsupported NetBSD version: $LSOF_VSTR"
 	echo "!!!WARNING!!!  Configuring for NetBSD 1.6"
 	;;
       2.0*)
 	LSOF_TSTBIGF=" "
-	LSOF_VERS="2000"
+	LSOF_VERS="2000000"
 	;;
       2.99.9)
 	LSOF_TSTBIGF=" "
-	LSOF_VERS="2999"
+	LSOF_VERS="2099009"
+	;;
+      2.99.10)
+	LSOF_TSTBIGF=" "
+	LSOF_VERS="2099010"
 	;;
       2*)
-	LSOF_VERS=2000
+	LSOF_VERS="2000000"
 	echo "!!!WARNING!!!  Unsupported NetBSD version: $LSOF_VSTR"
 	echo "!!!WARNING!!!  Configuring for NetBSD 2.0"
 	;;
       *)
 	echo "Unknown NetBSD release: $LSOF_VSTR"
-	echo Assuming NetBSD 1.0
-	LSOF_VERS="1000"
+	echo Assuming NetBSD 1.6
+	LSOF_VERS="1006000"
 	;;
       esac	# }
     fi	# }
@@ -2316,7 +2315,7 @@ return(0); }
     # Test for legal NetBSD version.
 
     case $LSOF_VERS in	# {
-    1000|1010|1020|1030|1040|1050|1060|2000|2999)
+    1002000|1003000|1004000|1005000|1006000|2000000|2099009|2099010)
       ;;
     *)
       echo "Unknown NetBSD version: $LSOF_VERS"
@@ -2336,166 +2335,637 @@ return(0); }
       fi	# }
     fi	# }
     LSOF_CFGF="$LSOF_CFGF $LSOF_TMP1"
-    if test -r ${LSOF_INCLUDE}/nfs/nfsproto.h	# {
+    if test -r ${LSOF_INCLUDE}/kvm.h	# {
+    then
+      grep -q kvm_getproc2 ${LSOF_INCLUDE}/kvm.h
+      if test $? -eq 0	# {
+      then
+          LSOF_CFGF="$LSOF_CFGF -DHASKVMGETPROC2"
+      fi	# }
+    fi	# }
+
+  # Here begin the dual tests on header files that may be in $LSOF_INCLUDE
+  # or $NETBSD_SYS.
+  #
+  # Note that $LSOF_TMP1 holds an indicator of the need for -I$NETBSD_SYS.
+  # LSOF_TMP4 contains a temporary indicator of the use of $NETBSD_SYS.
+
+    LSOF_TMP1=0
+    if test "X$NETBSD_SYS" = "X"	# {
     then
-	LSOF_CFGF="$LSOF_CFGF -DHASNFSPROTO"
+      if test -d /usr/src	# {
+      then
+	NETBSD_SYS="/usr/src/sys"
+      else
+        NETBSD_SYS=$LSOF_INCLUDE
+      fi	# }
     fi	# }
-    if test -r ${LSOF_INCLUDE}/netinet/ip6.h	# {
+    LSOF_TMP2="nfs/nfsproto.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
+    fi	# }
+    if test "X$LSOF_TMP3" != "X"	# {
+    then
+      LSOF_CFGF="$LSOF_CFGF -DHASNFSPROTO"
+      if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+      then
+	LSOF_TMP1=1
+      fi	# }
+    fi	# }
+    LSOF_TMP2="netinet/ip6.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
+    fi	# }
+    if test "X$LSOF_TMP3" != "X"	# {
     then
       LSOF_CFGF="$LSOF_CFGF -DHASIPv6"
+      if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+      then
+	LSOF_TMP1=1
+      fi	# }
+    else
+      LSOF_TMP2="netinet/in.h"
+      if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+	LSOF_TMP4=0
+      else
+	if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+	then
+	  LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	  LSOF_TMP4=1
+	else
+	  LSOF_TMP3=""
+	fi	# }
+      fi	# }
+      if test "X$LSOF_TMP3" != "X"	# {
+      then
+	grep -q IPV6_INRIA_VERSION $LSOF_TMP3
+	if test $? -eq 0	# {
+	then
+	  LSOF_CFGF="$LSOF_CFGF -DHASIPv6 -DHASINRIAIPv6"
+	  if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	  then
+	    LSOF_TMP1=1
+	  fi	# }
+	fi	# }
+      fi # }
     fi	# }
-    LSOF_TMP1=0
-    if test "X$NETBSD_SYS" = "X"	# {
+    LSOF_TMP2="miscfs/fdesc/fdesc.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
     then
-      NETBSD_SYS=$LSOF_INCLUDE
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
     fi	# }
-    if test -r ${NETBSD_SYS}/miscfs/fdesc/fdesc.h	# {
+    if test "X$LSOF_TMP3" != "X"	# {
     then
-      grep -q Fctty ${NETBSD_SYS}/miscfs/fdesc/fdesc.h
+      grep -q Fctty $LSOF_TMP3
       if test $? -eq 0	# {
       then
 	LSOF_CFGF="$LSOF_CFGF -DHASFDESCFS=1"
       else
 	LSOF_CFGF="$LSOF_CFGF -DHASFDESCFS=2"
       fi	# }
-      grep -q fd_link ${NETBSD_SYS}/miscfs/fdesc/fdesc.h
+      grep -q fd_link $LSOF_TMP3
       if test $? -eq 0	# {
       then
 	LSOF_CFGF="$LSOF_CFGF -DHASFDLINK"
       fi	# }
-      LSOF_TMP1=1
+      if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+      then
+	LSOF_TMP1=1
+      fi	# }
     fi	# }
-    if test -r ${LSOF_INCLUDE}/sys/vnode.h	# {
+    LSOF_TMP2="miscfs/nullfs/null.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
     then
-      grep -q VT_LFS ${LSOF_INCLUDE}/sys/vnode.h
-      if test $? -eq 0   # {
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
       then
-	LSOF_CFGF="$LSOF_CFGF -DHASLFS"
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
       fi	# }
     fi	# }
-    if test -r ${LSOF_INCLUDE}/miscfs/nullfs/null.h	# {
+    if test "X$LSOF_TMP3" != "X"	# {
     then
       LSOF_CFGF="$LSOF_CFGF -DHASNULLFS"
-    else
-      if test -r ${NETBSD_SYS}/miscfs/nullfs/null.h	# {
+      if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
       then
-	LSOF_CFGF="$LSOF_CFGF -DHASNULLFS"
 	LSOF_TMP1=1
       fi	# }
     fi	# }
-    if test -d ${NETBSD_SYS}/miscfs/procfs	# {
+    LSOF_TMP2="miscfs/procfs"
+    if test -d ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -d ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
+    fi	# }
+    if test "X$LSOF_TMP3" != "X"	# {
     then
       LSOF_CFGF="$LSOF_CFGF -DHASPROCFS"
-      LSOF_TMP1=1
-      grep -q PFSroot ${NETBSD_SYS}/miscfs/procfs/procfs.h
-      if test $? -eq 0 #	{
+      if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+      then
+	LSOF_TMP1=1
+      fi	# }
+      if test -r ${LSOF_TMP3}/procfs.h	# {
+      then
+	grep -q PFSroot ${LSOF_TMP3}/procfs.h
+	if test $? -eq 0	# {
+	then
+	  LSOF_CFGF="$LSOF_CFGF -DHASPROCFS_PFSROOT"
+	fi #	}
+      fi	# }
+    fi	# }
+    LSOF_TMP2="sys/bufq.h"
+    LSOF_NBSD_BUFQH=0
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_CFGF="$LSOF_CFGF -DHASBUFQ_H"
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
       then
-	LSOF_CFGF="$LSOF_CFGF -DHASPROCFS_PFSROOT"
-      fi #	}
+	if test $NETBSD_SYS != $LSOF_INCLUDE	# {
+	then
+          LSOF_CFGF="$LSOF_CFGF -DHASBUFQ_H"
+	  LSOF_NBSD_BUFQH=1
+	fi	# }
+      fi	# }
+    fi	# }
+    LSOF_TMP2="isofs/cd9660"
+    if test -d ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -d ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
     fi	# }
-    if test -d ${NETBSD_SYS}/isofs/cd9660	# {
+    if test "X$LSOF_TMP3" != "X"	# {
     then
       LSOF_CFGF="$LSOF_CFGF -DHAS9660FS=1"
-      LSOF_TMP1=1
+      if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+      then
+	LSOF_TMP1=1
+      fi	# }
     else
-      if test -d ${NETBSD_SYS}/fs/cd9660	# {
+      LSOF_TMP2="fs/cd9660"
+      if test -d ${LSOF_INCLUDE}/$LSOF_TMP2	# {
       then
-        LSOF_CFGF="$LSOF_CFGF -DHAS9660FS=2"
-        LSOF_TMP1=1
+	LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+	LSOF_TMP4=0
+      else
+	if test -d ${NETBSD_SYS}/$LSOF_TMP2	# {
+	then
+	  LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	  LSOF_TMP4=1
+	else
+	  LSOF_TMP3=""
+	fi	# }
+      fi	# }
+      if test "X$LSOF_TMP3" != "X"	# {
+      then
+	LSOF_CFGF="$LSOF_CFGF -DHAS9660FS=1"
+	if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	then
+	  LSOF_TMP1=1
+	fi	# }
       fi	# }
     fi	# }
-    if test -d ${NETBSD_SYS}/msdosfs	# {
+    LSOF_TMP2="msdosfs"
+    if test -d ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -d ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
+    fi	# }
+    if test "X$LSOF_TMP3" != "X"	# {
     then
       LSOF_CFGF="$LSOF_CFGF -DHASMSDOSFS=1"
-      LSOF_TMP1=1
+      if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+      then
+	LSOF_TMP1=1
+      fi	# }
     else
-      if test -d ${NETBSD_SYS}/fs/msdosfs	# {
+      LSOF_TMP2="fs/msdosfs"
+      if test -d ${LSOF_INCLUDE}/$LSOF_TMP2	# {
       then
-        LSOF_CFGF="$LSOF_CFGF -DHASMSDOSFS=2"
-        LSOF_TMP1=1
+	LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+	LSOF_TMP4=0
+      else
+	if test -d ${NETBSD_SYS}/$LSOF_TMP2	# {
+	then
+	  LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	  LSOF_TMP4=1
+	else
+	  LSOF_TMP3=""
+	fi	# }
+      fi	# }
+      if test "X$LSOF_TMP3" != "X"	# {
+      then
+	LSOF_CFGF="$LSOF_CFGF -DHASMSDOSFS=2"
+	if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	then
+	  LSOF_TMP1=1
+	fi	# }
+      fi	# }
+    fi	# }
+    LSOF_TMP2="miscfs/kernfs/kernfs.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
       fi	# }
     fi	# }
-    if test -r ${NETBSD_SYS}/miscfs/kernfs/kernfs.h	# {
+    if test "X$LSOF_TMP3" != "X"	# {
     then
-      grep -q "kt_name;" ${NETBSD_SYS}/miscfs/kernfs/kernfs.h
+      grep -q "kt_name;" $LSOF_TMP3
       if test $? -eq 0	# {
 	then
  	  LSOF_CFGF="$LSOF_CFGF -DHASKERNFS"
-	  LSOF_TMP1=1
-	  grep -q "*kfs_kt;" ${NETBSD_SYS}/miscfs/kernfs/kernfs.h
+	  if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	  then
+	    LSOF_TMP1=1
+	  fi	# }
+	  grep -q "*kfs_kt;" $LSOF_TMP3
 	  if test $? -eq 0      # {
 	  then
 	    LSOF_CFGF="$LSOF_CFGF -DHASKERNFS_KFS_KT"
 	  fi	# }
       fi	# }
     fi	# }
-    if test $LSOF_TMP1 -eq 1 -a "X$LSOF_INCLUDE" != "X$NETBSD_SYS"	# {
+    LSOF_TMP2="sys/namei.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
     then
-      LSOF_DINC="-I$LSOF_INCLUDE -I$NETBSD_SYS"
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
     fi	# }
-    if test -r ${LSOF_INCLUDE}/sys/namei.h
+    if test "X$LSOF_TMP3" != "X"	# {
     then
-      grep -q nc_vpid ${LSOF_INCLUDE}/sys/namei.h
+      grep -q nc_vpid $LSOF_TMP3
       if test $? -eq 0	# {
       then
         LSOF_CFGF="$LSOF_CFGF -DHASNCVPID"
+	if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	then
+	  LSOF_TMP1=1
+	fi	# }
       fi	# }
     fi	# }
-    grep -q i_ffs_size ${LSOF_INCLUDE}/ufs/ufs/inode.h
-    if test $? -eq 0	# {
+    LSOF_TMP2="ufs/ufs/inode.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
     then
-      LSOF_CFGF="$LSOF_CFGF -DHASI_FFS"
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
     else
-      grep -q i_ffs1_size ${LSOF_INCLUDE}/ufs/ufs/inode.h
-      if test $? -eq 0	# {
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
       then
-	LSOF_CFGF="$LSOF_CFGF -DHASI_FFS1"
-      fi	#}
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
     fi	# }
-    grep -q VT_EXT2FS ${LSOF_INCLUDE}/sys/vnode.h
-    if test $? -eq 0	# {
+    if test "X$LSOF_TMP3" != "X"	# {
     then
-      LSOF_CFGF="$LSOF_CFGF -DHASEXT2FS"
-      grep -q "*e2fs_din" ${LSOF_INCLUDE}/ufs/ufs/inode.h
+      grep -q i_ffs_size $LSOF_TMP3
       if test $? -eq 0	# {
       then
-	LSOF_CFGF="$LSOF_CFGF -DHASI_E2FS_PTR"
+	LSOF_CFGF="$LSOF_CFGF -DHASI_FFS"
+	if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	then
+	  LSOF_TMP1=1
+	fi	# }
+      else
+	grep -q i_ffs1_size $LSOF_TMP3
+	if test $? -eq 0	# {
+	then
+	  LSOF_CFGF="$LSOF_CFGF -DHASI_FFS1"
+	  if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	  then
+	    LSOF_TMP1=1
+	  fi	# }
+	fi	# }
+      fi	# }
+      grep -q i_ffs_effnlink $LSOF_TMP3
+      if test $? -eq 0	# {
+      then
+	LSOF_CFGF="$LSOF_CFGF -DHASEFFNLINK=i_ffs_effnlink"
+	if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	then
+	  LSOF_TMP1=1
+	fi	# }
       fi	# }
     fi	# }
-    if test -r ${LSOF_INCLUDE}/nfs/nfsnode.h	# {
+    LSOF_TMP2="sys/vnode.h"
+    LSOF_NBSD_PTYFS=0
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
     then
-      grep -q "*n_vattr" ${LSOF_INCLUDE}/nfs/nfsnode.h
-      if test $? -eq 0	# {
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
       then
-	LSOF_CFGF="$LSOF_CFGF -DHASNFSVATTRP"
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
       fi	# }
     fi	# }
-    if test "X$NETBSD_UVM" = "X"	# {
+    if test "XLSOF_TMP3" != "X"	# {
     then
-      if test -r /etc/mk.conf	# {
+      grep -q VT_EXT2FS $LSOF_TMP3
+      if test $? -eq 0	# {
       then
-	grep -q "^UVM[ 	]*=" /etc/mk.conf
-	if test $? -eq 0	# {
+	LSOF_CFGF="$LSOF_CFGF -DHASEXT2FS"
+	if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	then
+	  LSOF_TMP1=1
+	fi	# }
+	LSOF_TMP2="ufs/ufs/inode.h"
+	if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+	then
+	  LSOF_TMP5="${LSOF_INCLUDE}/$LSOF_TMP2"
+	  LSOF_TMP6=0
+	else
+	  if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+	  then
+	    LSOF_TMP5="${NETBSD_SYS}/$LSOF_TMP2"
+	    LSOF_TMP6=1
+	  else
+	    LSOF_TMP5=""
+	  fi	# }
+        fi	# }
+	if test "X$LSOF_TMP5" != "X"	# {
 	then
-	  NETBSD_UVM="Y"
+	  grep -q "*e2fs_din" $LSOF_TMP5
+	  if test $? -eq 0	# {
+	  then
+	    LSOF_CFGF="$LSOF_CFGF -DHASI_E2FS_PTR"
+	    if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	    then
+	      LSOF_TMP1=$LSOF_TMP6
+	    fi	# }
+	  fi	# }
 	fi	# }
       fi	# }
-      if test "X$NETBSD_UVM" = "X"	# {
+      grep -q VT_LFS $LSOF_TMP3
+      if test $? -eq 0   # {
       then
-	if test -r ${LSOF_INCLUDE}/sys/vnode.h	# {
+	LSOF_CFGF="$LSOF_CFGF -DHASLFS"
+	if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
 	then
-	  grep -q UVM ${LSOF_INCLUDE}/sys/vnode.h
-	  if test $? -ne 0	# {
+	  LSOF_TMP1=1
+	fi	# }
+      fi	# }
+      grep -q VT_PTYFS $LSOF_TMP3
+      if test $? -eq 0   # {
+      then
+	LSOF_TMP2="fs/ptyfs/ptyfs.h"
+	if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+	then
+	  LSOF_CFGF="$LSOF_CFGF -DHASPTYFS"
+	else
+	  if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
 	  then
-	    egrep -q "v_uvm;|v_uobj;" ${LSOF_INCLUDE}/sys/vnode.h
-	    if test $? -eq 0	# {
+	    if test $NETBSD_SYS != $LSOF_INCLUDE	# {
 	    then
-	      NETBSD_UVM="Y"
+	      LSOF_CFGF="$LSOF_CFGF -DHASPTYFS"
+	      LSOF_NBSD_PTYFS=1
 	    fi	# }
 	  fi	# }
 	fi	# }
       fi	# }
+      if test "X$NETBSD_UVM" = "X"	# {
+      then
+	grep -q UVM $LSOF_TMP3
+	if test $? -ne 0	# {
+	then
+	  egrep -q "v_uvm;|v_uobj;" $LSOF_TMP3
+	  if test $? -eq 0	# {
+	  then
+	    NETBSD_UVM="Y"
+	  fi	# }
+	fi	# }
+      fi	# }
+    fi	# }
+    LSOF_TMP2="nfs/nfsnode.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
+    fi	# }
+    if test "X$LSOF_TMP3" != "X"	# {
+    then
+      grep -q "*n_vattr" $LSOF_TMP3
+      if test $? -eq 0	# {
+      then
+	LSOF_CFGF="$LSOF_CFGF -DHASNFSVATTRP"
+	if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	then
+	  LSOF_TMP1=1
+	fi	# }
+      fi	# }
+    fi	# }
+    LSOF_TMP2="sys/lockf.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
     fi	# }
+    if test "X$LSOF_TMP3" != "X"	# {
+    then
+      grep -q vop_advlock_args $LSOF_TMP3
+      if test $? -eq 0	# {
+      then
+	LSOF_CFGF="$LSOF_CFGF -DHAS_ADVLOCK_ARGS"
+	if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	then
+	  LSOF_TMP1=1
+	fi	# }
+      fi	# }
+      grep -q lf_lwp $LSOF_TMP3
+      if test $? -eq 0	# {
+      then
+	LSOF_CFGF="$LSOF_CFGF -DHAS_LF_LWP"
+	if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	then
+	  LSOF_TMP1=1
+	fi	# }
+      fi	# }
+    fi	# }
+    LSOF_TMP2="sys/lwp.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
+    fi	# }
+    if test "X$LSOF_TMP3" != "X"	# {
+    then
+      LSOF_CFGF="$LSOF_CFGF -DHAS_LWP_H"
+      if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+      then
+	LSOF_TMP1=1
+      fi	# }
+    fi	# }
+    LSOF_TMP2="sys/filedesc.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
+    fi	# }
+    if test "X$LSOF_TMP3" != "X"	# {
+    then
+      grep -q "^struct cwdinfo {" $LSOF_TMP3
+      if test $? -eq 0	# {
+      then
+	LSOF_CFGF="$LSOF_CFGF -DHASCWDINFO"
+	if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+	then
+	  LSOF_TMP1=1
+	fi	# }
+      fi	# }
+    fi	# }
+    LSOF_TMP2="sys/pipe.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+      LSOF_TMP4=0
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+	LSOF_TMP4=1
+      else
+	LSOF_TMP3=""
+      fi	# }
+    fi	# }
+    if test "X$LSOF_TMP3" != "X"	# {
+    then
+      LSOF_CFGF="$LSOF_CFGF -DHAS_SYS_PIPEH"
+      if test $LSOF_TMP1 -eq 0 -a $LSOF_TMP4 -eq 1	# {
+      then
+	LSOF_TMP1=1
+      fi	# }
+    fi	# }
+    if test -r ${LSOF_INCLUDE}/sys/statvfs.h 	# {
+    then
+      grep -q '^struct statvfs {' ${LSOF_INCLUDE}/sys/statvfs.h
+      if test $? -eq 0	# {
+      then
+	LSOF_CFGF="$LSOF_CFGF -DHASSTATVFS"
+      fi	# }
+    fi	# }
+
+  # Here end the dual NetBSD tests for header files in $LSOF_INCLUDE or
+  # NETBSD_SYS.
+  #
+  # After this LSOF_TMP1 may be reused.
+
+    if test $LSOF_TMP1 -eq 1	# {
+    then
+      LSOF_DINC="-I$LSOF_INCLUDE -I$NETBSD_SYS"
+    fi	# }
+
+  # Build special header files, as required.
+
     rm -rf dialects/n+obsd/include
     if test "X$NETBSD_UVM" = "XY" -o "X$NETBSD_UVM" = "Xy"	# {
     then
@@ -2508,10 +2978,22 @@ return(0); }
 	LSOF_CFGF="$LSOF_CFGF -DHAS_UVM_INCL"
       fi	# }
     fi	# }
-    if test -r ${LSOF_INCLUDE}/sys/mount.h	# {
+    LSOF_TMP2="sys/mount.h"
+    if test -r ${LSOF_INCLUDE}/$LSOF_TMP2	# {
+    then
+      LSOF_TMP3="${LSOF_INCLUDE}/$LSOF_TMP2"
+    else
+      if test -r ${NETBSD_SYS}/$LSOF_TMP2	# {
+      then
+	LSOF_TMP3="${NETBSD_SYS}/$LSOF_TMP2"
+      else
+	LSOF_TMP3=""
+      fi	# }
+    fi	# }
+    if test "X$LSOF_TMP3" != "X"	# {
     then
 
-      # Build the netexport.h header file for NetBSD.
+      # Build a local NetBSD netexport.h header file.
 
       LSOF_TMP1=${LSOF_TMPC}.edscr
       LSOF_TMP2=${LSOF_TMPC}.netcred
@@ -2553,59 +3035,48 @@ return(0); }
       if test $? -ne 0	# {
       then
 	LSOF_CFGF="$LSOF_CFGF -I`pwd`/dialects/n+obsd/include"
-      fi
+      fi	# }
     fi	# }
-    if test -r ${LSOF_INCLUDE}/sys/lockf.h	# {
+    if test $LSOF_NBSD_BUFQH -eq 1	# {
     then
-      grep vop_advlock_args ${LSOF_INCLUDE}/sys/lockf.h > /dev/null
-      if test $? -eq 0	# {
+
+    # Make a local copy of $NETBSD_SYS/sys/bufq.h.
+
+      if test ! -d dialects/n+obsd/include	# {
       then
-	LSOF_CFGF="$LSOF_CFGF -DHAS_ADVLOCK_ARGS"
+	mkdir dialects/n+obsd/include
       fi	# }
-      grep lf_lwp ${LSOF_INCLUDE}/sys/lockf.h > /dev/null
-      if test $? -eq 0	# {
+      if test ! -d dialects/n+obsd/include/sys	# {
       then
-	LSOF_CFGF="$LSOF_CFGF -DHAS_LF_LWP"
+	mkdir dialects/n+obsd/include/sys
       fi	# }
-    fi	# }
-    if test -r ${LSOF_INCLUDE}/sys/lwp.h	# {
-    then
-      LSOF_CFGF="$LSOF_CFGF -DHAS_LWP_H"
-    fi	# }
-    if test -r ${LSOF_INCLUDE}/netinet/in.h	# {
-    then
-      grep IPV6_INRIA_VERSION ${LSOF_INCLUDE}/netinet/in.h > /dev/null
-      if test $? -eq 0	# {
+      cp $NETBSD_SYS/sys/bufq.h dialects/n+obsd/include/sys
+      echo $LSOF_CFGF | grep /dialects/n+obsd/include > /dev/null 2>&1
+      if test $? -ne 0	# {
       then
-	LSOF_CFGF="$LSOF_CFGF -DHASIPv6 -DHASINRIAIPv6"
+	LSOF_CFGF="$LSOF_CFGF -I`pwd`/dialects/n+obsd/include"
       fi	# }
     fi	# }
-    if test -r ${LSOF_INCLUDE}/sys/filedesc.h	# {
+    if test $LSOF_NBSD_PTYFS -eq 1	# {
     then
-      grep -q "^struct cwdinfo {" ${LSOF_INCLUDE}/sys/filedesc.h
-      if test $? -eq 0	# {
+
+    # Make a local copy of $NETBSD_SYS/sys/fs/ptyfs/.
+
+      if test ! -d dialects/n+obsd/include	# {
       then
-	LSOF_CFGF="$LSOF_CFGF -DHASCWDINFO"
+	mkdir dialects/n+obsd/include
       fi	# }
-    fi	# }
-    if test -r ${LSOF_INCLUDE}/sys/pipe.h	# {
-    then
-      LSOF_CFGF="$LSOF_CFGF -DHAS_SYS_PIPEH"
-    fi	# }
-    if test -r ${LSOF_INCLUDE}/sys/statvfs.h   # {
-    then
-      grep -q '^struct statvfs {' ${LSOF_INCLUDE}/sys/statvfs.h
-      if test $? -eq 0	# {
+      if test ! -d dialects/n+obsd/include/fs	# {
       then
-	LSOF_CFGF="$LSOF_CFGF -DHASSTATVFS"
+	mkdir dialects/n+obsd/include/fs
       fi	# }
-    fi	# }
-    if test -r ${LSOF_INCLUDE}/kvm.h	# {
-    then
-      grep -q kvm_getproc2 ${LSOF_INCLUDE}/kvm.h
-      if test $? -eq 0	# {
+      rm -rf dialects/n+obsd/include/fs/ptyfs
+      mkdir dialects/n+obsd/include/fs/ptyfs
+      cp $NETBSD_SYS/fs/ptyfs/*.h dialects/n+obsd/include/fs/ptyfs
+      echo $LSOF_CFGF | grep /dialects/n+obsd/include > /dev/null 2>&1
+      if test $? -ne 0	# {
       then
-          LSOF_CFGF="$LSOF_CFGF -DHASKVMGETPROC2"
+	LSOF_CFGF="$LSOF_CFGF -I`pwd`/dialects/n+obsd/include"
       fi	# }
     fi	# }
     LSOF_CFGL="$LSOF_CFGL -lkvm"
@@ -2897,6 +3368,14 @@ return(0); }
       fi	# }
       LSOF_CFGF="$LSOF_CFGF -DHASEXT2FS=$LSOF_TMP1"
     fi	# }
+    if test -r ${LSOF_INCLUDE}/ufs/ufs/inode.h	# {
+    then
+      grep -q i_effnlink ${LSOF_INCLUDE}/ufs/ufs/inode.h
+      if test $? -eq 0	# {
+      then
+	LSOF_CFGF="$LSOF_CFGF -DHASEFFNLINK=i_effnlink"
+      fi	# }
+    fi	# }
     if test -r ${LSOF_INCLUDE}/sys/namei.h
     then
       grep -q nc_vpid ${LSOF_INCLUDE}/sys/namei.h
