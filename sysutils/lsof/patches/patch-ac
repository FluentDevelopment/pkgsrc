$NetBSD: patch-ac,v 1.14 2004/01/13 02:50:28 atatat Exp $

Support for LFS.

--- dialects/n+obsd/dnode.c.orig	2003-10-15 07:34:21.000000000 -0400
+++ dialects/n+obsd/dnode.c
@@ -528,6 +528,10 @@ process_overlaid_node:
 	case VT_EXT2FS:
 #endif	/* defined(HASEXT2FS) */
 
+#if	defined(HASLFS)
+	case VT_LFS:
+#endif	/* defined(HASLFS) */
+
 	case VT_UFS:
 	    if (!v->v_data
 	    ||  kread((KA_T)v->v_data, (char *)&i, sizeof(i))) {
@@ -546,7 +550,11 @@ process_overlaid_node:
 		&&  !kread((KA_T)i.i_din.e2fs_din, (char *)&ed, sizeof(ed)))
 		    edp = &ed;
 # else	/* !defined(HASI_E2FS_PTR) */
+#  if	HASEXT2FS<2
 		edp = &i.i_din.e2fs_din;
+#  else	/* HASEXT2FS>=2 */
+		edp = &i.i_e2din;
+#  endif	/* HASEXT2FS>=2 */
 # endif	/* defined(HASI_E2FS_PTR) */
 
 	    } else
@@ -693,7 +701,11 @@ process_overlaid_node:
 		    rdevs = 1;
 		}
 # else	/* !defined(HASI_E2FS_PTR) */
+#  if	HASEXT2FS<2
 		rdev = i.i_din.e2fs_din.e2di_rdev;
+#  else	/* HASEXT2FS>=2 */
+		rdev = i.i_e2din.e2di_rdev;
+#  endif	/* HASEXT2FS>=2 */
 		rdevs = 1;
 # endif	/* defined(HASI_E2FS_PTR) */
 
@@ -895,13 +907,17 @@ process_overlaid_node:
 
 	    case N_REGLR:
 		if (type == VREG || type == VDIR) {
-		    if (nty == INODE) {
+		    switch (nty) {
+		    case INODE:
 
 #if	defined(HASI_FFS)
+			
 			Lf->sz = (SZOFFTYPE)i.i_ffs_size;
 			Lf->sz_def = 1;
+			break;
 #else	/* !defined(HASI_FFS) */
 # if	defined(HASI_FFS1)
+
 			if (ffs == 1) {
 			    if (u1s) {
 				Lf->sz = (SZOFFTYPE)u1.di_size;
@@ -913,28 +929,30 @@ process_overlaid_node:
 				Lf->sz_def = 1;
 			    }
 			}
+			break;
 # else	/* !defined(HASI_FFS1) */
 			Lf->sz = (SZOFFTYPE)i.i_size;
 			Lf->sz_def = 1;
 # endif	/* defined(HASI_FFS1) */
 #endif	/* defined(HASI_FFS) */
 
-		    }
+			break;
+
 
 #if	defined(HASMSDOSFS)
-		    else if (nty == DOSNODE) {
+		    case DOSNODE:
 			Lf->sz = (SZOFFTYPE)d.de_FileSize;
 			Lf->sz_def = 1;
-		    }
+			break;
 #endif	/* defined(HASMSDOSFS) */
 
-		    else if (nty == MFSNODE) {
+		    case MFSNODE:
 			Lf->sz = (SZOFFTYPE)m.mfs_size;
 			Lf->sz_def = 1;
-		    }
+			break;
 
 #if	defined(HASEXT2FS)
-		    else if (nty == EXT2NODE) {
+		    case EXT2NODE:
 # if	defined(HASI_E2FS_PTR)
 			if (edp) {
 			    Lf->sz = (SZOFFTYPE)edp->e2di_size;
@@ -944,11 +962,11 @@ process_overlaid_node:
 			Lf->sz = (SZOFFTYPE)i.i_e2fs_size;
 			Lf->sz_def = 1;
 # endif	/* defined(HASI_E2FS_PTR) */
-		    }
+			break;
 #endif	/* defined(HASEXT2FS) */
 
-		}
-		else if ((type == VCHR || type == VBLK) && !Fsize)
+		    }
+		} else if ((type == VCHR || type == VBLK) && !Fsize)
 		    Lf->off_def = 1;
 		break;
 	    }
@@ -984,7 +1002,8 @@ process_overlaid_node:
 		}
 		break;
 	    case N_REGLR:
-		if (nty == INODE) {
+		switch (nty) {
+		case INODE:
 
 # if	defined(HASI_FFS)
 		    Lf->nlink = (long)i.i_ffs_nlink;
@@ -1009,18 +1028,17 @@ process_overlaid_node:
 # endif	/* defined(HASI_FFS) */
 
 		    Lf->nlink_def = 1;
-		}
+		    break;
 
 #if	defined(HASMSDOSFS)
-		else if (nty == DOSNODE) {
+		case DOSNODE:
 		    Lf->nlink = (long)d.de_refcnt;
 		    Lf->nlink_def = 1;
-		}
+		    break;
 #endif	/* defined(HASMSDOSFS) */
 
-
 #if	defined(HASEXT2FS)
-		else if (nty == EXT2NODE) {
+		case EXT2NODE:
 # if	defined(HASI_E2FS_PTR)
 		    if (edp) {
 			Lf->nlink = (long)edp->e2di_nlink;
@@ -1030,9 +1048,12 @@ process_overlaid_node:
 		    Lf->nlink = (long)i.i_e2fs_nlink;
 		    Lf->nlink_def = 1;
 # endif	/* defined(HASI_E2FS_PTR) */
-		}
-#endif	/* defined(HASEXT2FS) */
 
+		    break;
+	
+#endif	/* defined(HASEXT2FS) */
+		
+		}
 		break;
 	    }
 	    if (Lf->nlink_def && Nlink && (Lf->nlink < Nlink))
