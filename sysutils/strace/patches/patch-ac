$NetBSD: patch-ac,v 1.1 2006/03/05 08:17:49 christos Exp $

--- file.c	2005-06-08 16:45:28.000000000 -0400
+++ file.c	2006-03-05 01:56:39.000000000 -0500
@@ -1,5 +1,4 @@
 /*
-#ifdef LINUX
  * Copyright (c) 1991, 1992 Paul Kranenburg <pk@cs.few.eur.nl>
  * Copyright (c) 1993 Branko Lankester <branko@hacktic.nl>
  * Copyright (c) 1993, 1994, 1995, 1996 Rick Sladkey <jrs@world.std.com>
@@ -44,6 +43,13 @@
 #else
 #define kernel_dirent dirent
 #endif
+#ifdef NETBSD
+#include <sys/statvfs.h>
+#define statfs statvfs
+#define __val __fsid_val
+#define f_fsid f_fsidx
+#endif
+
 
 #ifdef LINUX
 #  ifdef LINUXSPARC
@@ -162,7 +168,7 @@
 #define XATTR_REPLACE 2
 #endif
 
-#ifdef FREEBSD
+#ifdef ALLBSD
 #include <sys/param.h>
 #include <sys/mount.h>
 #include <sys/stat.h>
@@ -754,16 +760,20 @@
 #endif /* LINUXSPARC */
 
 static const struct xlat fileflags[] = {
-#ifdef FREEBSD
+#ifdef ALLBSD
 	{ UF_NODUMP,	"UF_NODUMP"	},
 	{ UF_IMMUTABLE,	"UF_IMMUTABLE"	},
 	{ UF_APPEND,	"UF_APPEND"	},
 	{ UF_OPAQUE,	"UF_OPAQUE"	},
+#ifdef UF_NOUNLINK
 	{ UF_NOUNLINK,	"UF_NOUNLINK"	},
+#endif
 	{ SF_ARCHIVED,	"SF_ARCHIVED"	},
 	{ SF_IMMUTABLE,	"SF_IMMUTABLE"	},
 	{ SF_APPEND,	"SF_APPEND"	},
+#ifdef SF_NOUNLINK
 	{ SF_NOUNLINK,	"SF_NOUNLINK"	},
+#endif
 #elif UNIXWARE >= 2
 #ifdef 	_S_ISMLD
 	{ _S_ISMLD, 	"_S_ISMLD"	},
@@ -775,7 +785,7 @@
 	{ 0,		NULL		},
 };
 
-#ifdef FREEBSD
+#ifdef ALLBSD
 int
 sys_chflags(tcp)
 struct tcb *tcp;
@@ -1440,6 +1450,7 @@
 #endif /* LINUX */
 
 #ifndef SVR4
+#ifndef NETBSD
 
 static const char *
 sprintfstype(magic)
@@ -1458,6 +1469,7 @@
 	sprintf(buf, "%#x", magic);
 	return buf;
 }
+#endif
 
 static void
 printstatfs(tcp, addr)
@@ -1485,7 +1497,11 @@
 		statbuf.f_namelen);
 #else /* !ALPHA */
 	tprintf("{f_type=%s, f_bsize=%lu, f_blocks=%lu, f_bfree=%lu, ",
+#ifndef NETBSD
 		sprintfstype(statbuf.f_type),
+#else
+		statbuf.f_fstypename,
+#endif
 		(unsigned long)statbuf.f_bsize,
 		(unsigned long)statbuf.f_blocks,
 		(unsigned long)statbuf.f_bfree);
@@ -1986,7 +2002,7 @@
 
 #endif /* LINUX */
 
-#if defined FREEBSD || defined LINUX
+#if defined ALLBSD || defined LINUX
 static const struct xlat direnttypes[] = {
 	{ DT_UNKNOWN,	"DT_UNKNOWN" 	},
 	{ DT_FIFO,	"DT_FIFO" 	},
@@ -2059,15 +2075,16 @@
 				d->d_namlen, d->d_namlen, d->d_name);
 		}
 #endif /* SUNOS4 */
-#ifdef FREEBSD
+#ifdef ALLBSD
 		if (!abbrev(tcp)) {
-			tprintf("%s{d_fileno=%u, d_reclen=%u, d_type=",
-				i ? " " : "", d->d_fileno, d->d_reclen);
+			tprintf("%s{d_fileno=%llu, d_reclen=%u, d_type=",
+				i ? " " : "", (unsigned long long)d->d_fileno,
+				d->d_reclen);
 			printxval(direnttypes, d->d_type, "DT_???");
 			tprintf(", d_namlen=%u, d_name=\"%.*s\"}",
 				d->d_namlen, d->d_namlen, d->d_name);
 		}
-#endif /* FREEBSD */
+#endif /* ALLBSD */
 		if (!d->d_reclen) {
 			tprintf("/* d_reclen == 0, problem here */");
 			break;
@@ -2153,7 +2170,7 @@
 }
 #endif
 
-#ifdef FREEBSD
+#ifdef ALLBSD
 int
 sys_getdirentries(tcp)
 struct tcb * tcp;
@@ -2186,8 +2203,9 @@
 	for (i = 0; i < len;) {
 		struct kernel_dirent *d = (struct kernel_dirent *) &buf[i];
 		if (!abbrev(tcp)) {
-			tprintf("%s{d_fileno=%u, d_reclen=%u, d_type=",
-				i ? " " : "", d->d_fileno, d->d_reclen);
+			tprintf("%s{d_fileno=%llu, d_reclen=%u, d_type=",
+				i ? " " : "", (unsigned long long)d->d_fileno,
+				d->d_reclen);
 			printxval(direnttypes, d->d_type, "DT_???");
 			tprintf(", d_namlen=%u, d_name=\"%.*s\"}",
 				d->d_namlen, d->d_namlen, d->d_name);
@@ -2225,7 +2243,7 @@
 }
 #endif /* LINUX */
 
-#ifdef FREEBSD
+#ifdef ALLBSD
 int
 sys___getcwd(tcp)
 struct tcb *tcp;
