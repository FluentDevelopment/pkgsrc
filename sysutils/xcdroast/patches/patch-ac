--- src/io.c.orig	2003-05-29 15:14:42.000000000 +0200
+++ src/io.c	2003-06-05 17:56:20.000000000 +0200
@@ -24,6 +24,14 @@
 #include <sys/wait.h>
 #include <signal.h>
 #include <time.h>
+#ifdef __NetBSD__
+# include <sys/ioctl.h>
+# ifdef HAVE_OSS
+#  include <soundcard.h>
+# else
+#  include <sys/audioio.h>
+# endif
+#endif
 #if defined(linux) || defined(__FreeBSD__)
 # include <sys/soundcard.h>
 # include <sys/ioctl.h>
@@ -1690,22 +1698,22 @@
 struct stat buf;
 #endif
 
-#if defined(sun) || defined(aix) || defined(__OpenBSD__)
+#if defined(sun) || defined(aix) || defined(__OpenBSD__) || (defined(__NetBSD__) && !defined(HAVE_OSS))
 gchar *audiodev;
 #endif
 	dsp = NULL;
 
-#if defined(linux) || defined(__FreeBSD__)
+#if defined(linux) || defined(__FreeBSD__) || (defined(__NetBSD__) && defined(HAVE_OSS))
 	/* for linux check if /dev/dsp or /dev/dsp1 exist */
 
-	if (stat("/dev/dsp",&buf) == 0) {
-		dsp = g_list_append(dsp,"/dev/dsp");
+	if (stat("@DEVOSSAUDIO@",&buf) == 0) {
+		dsp = g_list_append(dsp,"@DEVOSSAUDIO@");
 	}
 	if (stat("/dev/dsp1",&buf) == 0) {
 		dsp = g_list_append(dsp,"/dev/dsp1");
 	}
 #endif
-#if defined(sun) || defined(__OpenBSD__)
+#if defined(sun) || defined(__OpenBSD__) || (defined(__NetBSD__) && !defined(HAVE_OSS))
 	/* check if the user has any special audio-hardware running,
 	   which set the AUDIODEV-environment-variable */
 	audiodev = getenv("AUDIODEV");
@@ -1814,15 +1822,15 @@
 struct stat buf;
 # endif
 #endif
-#if defined(linux) || defined(__FreeBSD__)
+#if defined(linux) || defined(__FreeBSD__) || (defined(__NetBSD__) && defined(HAVE_OSS))
 gchar tmp2[MAXLINE];
 #endif
 
 	strcpy(ret,"");
 
-#if defined(linux) || defined(__FreeBSD__)
+#if defined(linux) || defined(__FreeBSD__) || (defined(__NetBSD__) && defined(HAVE_OSS))
 
-	if (strncmp(dsp,"/dev/dsp",8) == 0) {
+	if (strncmp(dsp,"@DEVOSSAUDIO@",8) == 0) {
 		strcpy(tmp,dsp+8);
 		g_snprintf(tmp2,MAXLINE,"/dev/mixer%s",tmp);
 
@@ -1832,7 +1840,7 @@
 		}	
 	}	
 #endif
-#if defined(sun) || defined(__OpenBSD__)
+#if defined(sun) || defined(__OpenBSD__) || (defined(__NetBSD__) && !defined(HAVE_OSS))
 
 	g_snprintf(tmp,MAXLINE,"%s%s",dsp,"ctl");
 
@@ -3573,10 +3581,10 @@
 #if !(defined(__MACH__) && defined(__APPLE__)) 
 gint mix;
 #endif
-#if defined(linux) || defined(__FreeBSD__)
+#if defined(linux) || defined(__FreeBSD__) || (defined(__NetBSD__) && defined(HAVE_OSS))
 gint val;
 #endif
-#if defined(sun) || defined(__OpenBSD__)
+#if defined(sun) || defined(__OpenBSD__) || (defined(__NetBSD__) && !defined(HAVE_OSS))
 audio_info_t ainfo;
 #endif
 #ifdef hpux
@@ -3591,7 +3599,7 @@
 		return -1;
 	}
 
-#if defined(linux) || defined(__FreeBSD__)
+#if defined(linux) || defined(__FreeBSD__) || (defined(__NetBSD__) && defined(HAVE_OSS))
 
 	dodebug(10,"quering mixer %s\n", setupdata.mix_device);
 	mix = open(setupdata.mix_device, O_RDWR);
@@ -3611,7 +3619,7 @@
 	return ((val & 0x7f) + ((val >> 8) & 0x7f))/2;
 
 #endif
-#if defined(sun) || defined(__OpenBSD__)
+#if defined(sun) || defined(__OpenBSD__) || (defined(__NetBSD__) && !defined(HAVE_OSS))
 
 	dodebug(10,"quering mixer %s\n", setupdata.mix_device);
 	mix = open(setupdata.mix_device, O_RDONLY);
@@ -3699,7 +3707,7 @@
 #if !(defined(__MACH__) && defined(__APPLE__)) 
 gint mix;
 #endif
-#if defined(sun) || defined(__OpenBSD__)
+#if defined(sun) || defined(__OpenBSD__) || (defined(__NetBSD__) && !defined(HAVE_OSS))
 audio_info_t ainfo;
 #endif
 #ifdef aix
@@ -3717,7 +3725,7 @@
 		return -1;
 	}
 
-#if defined(linux) || defined(__FreeBSD__)
+#if defined(linux) || defined(__FreeBSD__) || (defined(__NetBSD__) && defined(HAVE_OSS))
 
 	dodebug(10,"setting mixer %s to %d\n", setupdata.mix_device, val);
 	mix = open(setupdata.mix_device, O_RDWR);
@@ -3735,7 +3743,7 @@
 	close(mix);
 
 #endif 
-#if defined(sun) || defined(__OpenBSD__)
+#if defined(sun) || defined(__OpenBSD__) || (defined(__NetBSD__) && !defined(HAVE_OSS))
 
 	dodebug(10,"setting mixer %s to %d\n", setupdata.mix_device, val);
 	mix = open(setupdata.mix_device, O_WRONLY);
@@ -5507,7 +5515,11 @@
 	}
 
 	/* build command line */
-	get_wrap_path_cdrecord(tmp3);
+	if (curset.isProDVD) {
+		get_wrap_path("CDRECORDPRODVD", tmp3);
+	} else {
+		get_wrap_path("CDRECORD", tmp3);
+	}
 	g_snprintf(line,MAXLINE,"%s %s -atip 2>&1",
 		tmp3,tmp);
 
@@ -5518,6 +5530,11 @@
                 g_error("popen error\n");
         }
 
+	/* syntax for dvd-atip is different */
+	if (is_dvdwriter(curset.writer_devnr)) {
+		found_atip = 1;
+	}
+
 	errcount = 0;
         for (;;) {
                 if (fgets(line,MAXLINE,fpin) == NULL) 
@@ -6605,7 +6622,7 @@
 				read_output_ctrl = 4;
 			} 
 			/* check Medium error/buffer underrun */
-			if (strncmp(tmp2,"Input/output error",18)) {
+			if (strncmp(tmp2,"Input/output error",18) == 0) {
 				read_output_ctrl = 5;
 			}
 		}
