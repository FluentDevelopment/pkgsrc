$NetBSD: patch-ac,v 1.9 2002/12/16 05:14:30 lukem Exp $

--- abcde.orig	Mon Jan 28 16:44:02 2002
+++ abcde
@@ -27,7 +27,7 @@ echo "-j    Number of encoder processes 
 echo "-l    Use low disk space algorithm"
 echo "-n    No lookup. Don't query CDDB, just create and use template"
 echo "-N    Noninteractive. Never prompt for anything"
-echo "-o    Output file type - either \"ogg\" or \"mp3\""
+echo "-o    Output file type - either \"ogg\", \"mp3\"" or \"flac\"
 echo "-r    [host1,host2...] Also encode on these remote hosts"
 echo "-x    Eject CD after all tracks are read"
 echo "Tracks is a space-delimited list of tracks to grab."
@@ -206,6 +206,11 @@ splitvarious ()
 			TRACKARTIST="$(echo $DTITLEARTIST | cut -f1 -d~)"
 			TRACKNAME="$(echo $DTITLEARTIST | cut -f2 -d~)"
 			;;
+		trailing-paren)
+			DTITLEARTIST="$(echo $TRACKNAME | sed 's,^\(.*\) (\(.*\)),\1~\2,')"
+			TRACKARTIST="$(echo $DTITLEARTIST | cut -f2 -d~)"
+			TRACKNAME="$(echo $DTITLEARTIST | cut -f1 -d~)"
+			;;
 		esac
 	else
 		TRACKARTIST=$DARTIST
@@ -221,7 +226,8 @@ do_tag ()
 {
 	COMMENTOUTPUT="$(eval echo ${COMMENT})"
 	run_command '' echo "Tagging track $1 of $TRACKS: $TRACKNAME..."
-	if [ "$OUTPUTTYPE" = "mp3" ]; then
+	case "$OUTPUTTYPE" in
+	mp3)
 		# Amazingly, id3 and id3v2 have identical -a, -A, -c, -t, and -T switches
 		# ...except id3v2's -c is completely broken (there's a bug in id3lib
 		# v3.7.x keeping -c from being properly implemented)
@@ -232,7 +238,8 @@ do_tag ()
 			run_command tagtrack-$1 $TAGGER $TAGGEROPTS -c "$COMMENTOUTPUT" \
 				-A "$DALBUM" -a "$TRACKARTIST" -t "$TRACKNAME" -T "$1" "$ABCDETEMPDIR/track$1.$OUTPUTTYPE"
 		fi
-	else
+		;;
+	ogg)
 		# vorbiscomment can't do in-place modification, mv the file first
 		if [ -f "$ABCDETEMPDIR/track$1.$OUTPUTTYPE" -a ! -f "$ABCDETEMPDIR/track$1.uncommented.$OUTPUTTYPE" ]; then
 			mv "$ABCDETEMPDIR/track$1.$OUTPUTTYPE" "$ABCDETEMPDIR/track$1.uncommented.$OUTPUTTYPE"
@@ -254,7 +261,11 @@ do_tag ()
 		else
 			mv "$ABCDETEMPDIR/track$1.uncommented.$OUTPUTTYPE" "$ABCDETEMPDIR/track$1.$OUTPUTTYPE"
 		fi
-	fi
+		;;
+	flac)
+		run_command tagtrack-$1 true
+		;;
+	esac
 }
 
 # do_encode [tracknumber] [hostname]
@@ -295,6 +306,11 @@ do_encode ()
 			;;
 		esac
 		;;
+	flac)
+		case "$ENCODERSYNTAX" in
+		flac) run_command encodetrack-$1 nice $ENCNICE $ENCODER -TARTIST="$TRACKARTIST" -TALBUM="$DALBUM" -TTITLE="$TRACKNAME" -TTRACKNUMBER="$1" $ENCODEROPTS -o "$OUT" "$IN" ;;
+		esac
+		;;
 	esac
 	# Only remove .wav if the encoding succeeded
 	if checkerrors encodetrack-$1; then :; else
@@ -574,7 +590,7 @@ do_cddbread ()
 			fi
 			# List out disc title/author and contents
 			echo ---- "$(cut '-d ' -f4- "$ABCDETEMPDIR/cddbquery")" ---- >> "$ABCDETEMPDIR/cddbchoices"
-			for TRACK in $(seq 1 $TRACKS)
+			for TRACK in $(jot $TRACKS)
 			do
 				echo $TRACK: "$(grep ^TTITLE$(expr $TRACK - 1)= "$ABCDETEMPDIR/cddbread.1" | cut -f2- -d= | tr -d \\r\\n)" >> "$ABCDETEMPDIR/cddbchoices"
 			done
@@ -590,7 +606,7 @@ do_cddbread ()
 			$CDDBTOOL template $(cat "$ABCDETEMPDIR/discid") > "$ABCDETEMPDIR/cddbread.1"
 			# List out disc title/author and contents of template
 			echo ---- Unknown Artist / Unknown Album ---- >> "$ABCDETEMPDIR/cddbchoices"
-			for TRACK in $(seq 1 $TRACKS)
+			for TRACK in $(jot $TRACKS)
 			do
 				echo $TRACK: "$(grep ^TTITLE$(expr $TRACK - 1)= "$ABCDETEMPDIR/cddbread.1" | cut -f2- -d= | tr -d \\r\\n)" >> "$ABCDETEMPDIR/cddbchoices"
 			done
@@ -620,7 +636,7 @@ do_cddbread ()
 				fi
 				# List out disc title/author and contents
 				echo \#$X: ---- "$DISCINFO" ---- >> "$ABCDETEMPDIR/cddbchoices"
-				for TRACK in $(seq 1 $TRACKS)
+				for TRACK in $(jot $TRACKS)
 				do
 					echo $TRACK: "$(grep ^TTITLE$(expr $TRACK - 1)= "$ABCDETEMPDIR/cddbread.$X" | cut -f2- -d= | tr -d \\r\\n)" >> "$ABCDETEMPDIR/cddbchoices"
 				done
@@ -766,6 +782,9 @@ do_cddbedit ()
 		elif [ "$(grep -c "^TTITLE.*\-" "$CDDBDATA")" -gt "$(expr $NUMTRACKS / 2 )" ]; then
 			# More than 1/2 contain a "-", so guess forward-dash
 			DEFAULTSTYLE=2
+		elif [ "$(grep -c "^TTITLE.*(.*)" "$CDDBDATA")" -gt "$(expr $NUMTRACKS / 2 )" ]; then
+			# More than 1/2 contain something in parens, so guess trailing-paren
+			DEFAULTSTYLE=6
 		fi
 
 		echo "1) Artist / Title" >&2
@@ -773,21 +792,22 @@ do_cddbedit ()
 		echo "3) Title / Artist" >&2
 		echo "4) Title - Artist" >&2
 		echo "5) Artist: Title" >&2
-		echo "6) This is a single-artist CD" >&2
-		echo -n "Which style of multiple artist entries is it? [1-6] ($DEFAULTSTYLE): " >&2
+		echo "6) Title (Artist)" >&2
+		echo "7) This is a single-artist CD" >&2
+		echo -n "Which style of multiple artist entries is it? [1-7] ($DEFAULTSTYLE): " >&2
 		if [ "$INTERACTIVE" = "y" ]; then
 			read VARIOUSARTISTSTYLE
 		else
 			echo $DEFAULTSTYLE >&2
 			VARIOUSARTISTSTYLE=$DEFAULTSTYLE
 		fi
-		VARIOUSARTISTSTYLE=$(echo $VARIOUSARTISTSTYLE | xargs printf %d)
+		VARIOUSARTISTSTYLE=$(echo 0$VARIOUSARTISTSTYLE | xargs printf %d)
 		# If they press Enter, then the default style (0) was chosen
-		while [ $VARIOUSARTISTSTYLE -lt 0 ] || [ $VARIOUSARTISTSTYLE -gt 6 ]; do
-			echo "Invalid selection. Please choose a number between 1 and 6."
-			echo -n "Selection [1-6]: "
+		while [ $VARIOUSARTISTSTYLE -lt 0 ] || [ $VARIOUSARTISTSTYLE -gt 7 ]; do
+			echo "Invalid selection. Please choose a number between 1 and 7."
+			echo -n "Selection [1-7]: "
 			read VARIOUSARTISTSTYLE
-			VARIOUSARTISTSTYLE=$(echo $VARIOUSARTISTSTYLE | xargs printf %d)
+			VARIOUSARTISTSTYLE=$(echo 0$VARIOUSARTISTSTYLE | xargs printf %d)
 		done
 		if [ "$VARIOUSARTISTSTYLE" = "0" ]; then
 			VARIOUSARTISTSTYLE=$DEFAULTSTYLE
@@ -809,7 +829,10 @@ do_cddbedit ()
 		5) # Artist: Title
 			VARIOUSARTISTSTYLE=colon
 			;;
-		6) # Single Artist
+		6) # Title (Artist)
+			VARIOUSARTISTSTYLE=trailing-paren
+			;;
+		7) # Single Artist
 			VARIOUSARTISTS=n
 			;;
 		esac
@@ -909,6 +932,7 @@ XINGMP3ENC=xingmp3enc
 MP3ENC=mp3enc
 VORBIZE=vorbize
 OGGENC=oggenc
+FLAC=flac
 ID3=id3
 ID3V2=id3v2
 CDPARANOIA=cdparanoia
@@ -929,9 +953,9 @@ XINGMP3ENCOPTS=
 MP3ENCOPTS=
 VORBIZEOPTS=
 OGGENCOPTS=
+FLACOPTS=
 ID3OPTS=
 ID3V2OPTS=
-CDPARANOIAOPTS=
 CDDA2WAVOPTS=
 WGETOPTS=
 CDDBTOOLOPTS=
@@ -948,7 +972,7 @@ ACTIONS=cddb,read,encode,tag,move,clean
 # Custom filename munging:
 mungefilename ()
 {
-	echo "$@" | sed s,:,\ -,g | tr \ / __ | tr -d \'\"\?\[:cntrl:\]
+	echo "$@" | sed s,:,\ -,g | tr / _ | tr -d \`\'\"\?\[:cntrl:\]
 }
 
 # If CDDBAVAIL is set to n, no CDDB read is done
@@ -964,17 +988,13 @@ if [ -z "$WAVOUTPUTDIR" ]; then
 	WAVOUTPUTDIR="$OUTPUTDIR"
 fi
 
-# If this is a devfs system, default to /dev/cdroms/cdrom0
-# instead of /dev/cdrom
-if [ -e /dev/cdroms/cdrom0 ]; then
-	CDROM=/dev/cdroms/cdrom0
-else
-	CDROM=/dev/cdrom
-fi
+RAWPART=`sysctl -n kern.rawpartition | awk '{printf "%c",97+$0}'`
+CDROM=/dev/rcd0$RAWPART
+CDPARANOIAOPTS="-g ${CDROM}"
 
 # Load system defaults
-if [ -r /etc/abcde.conf ]; then
-	. /etc/abcde.conf
+if [ -r @PKG_SYSCONFDIR@/abcde.conf ]; then
+	. @PKG_SYSCONFDIR@/abcde.conf
 fi
 # Load user preference defaults
 if [ -r $HOME/.abcde.conf ]; then
@@ -1010,7 +1030,7 @@ while [ $# -gt 0 ]; do
 	if [ "$RSTART" = "$REND" ]; then 
 		NEWTRACKS="$RSTART"
 	else
-		NEWTRACKS=$(seq -s ' ' $RSTART $REND)
+ 		NEWTRACKS=$(jot -s ' ' $(($REND - $RSTART + 1)) $RSTART $REND)
 	fi
 	TRACKQUEUE=$(echo "$TRACKQUEUE" "$NEWTRACKS")
 
@@ -1029,13 +1049,18 @@ case "$CDROMREADERSYNTAX" in
 		;;
 esac
 
-# If nothing has been specified, use oggenc for oggs and lame for mp3s
+# If nothing has been specified, use oggenc for oggs and lame for mp3s and flac
+# for flacs
 if [ "$ENCODERSYNTAX" = "default" ]; then
 	if [ "$OUTPUTTYPE" = "ogg" ]; then
 		ENCODERSYNTAX=oggenc
-	else
+	elif [ "$OUTPUTTYPE" = "mp3" ]; then
 		ENCODERSYNTAX=lame
-	fi
+	elif [ "$OUTPUTTYPE" = "flac" ]; then
+                ENCODERSYNTAX=flac
+        else 
+      		echo "abcde error: Invalid OUTPUTTYPE defined" >&2
+        fi
 fi
 
 # decide which encoder
@@ -1072,6 +1097,11 @@ case "$ENCODERSYNTAX" in
 		ENCODEROPTS="$OGGENCOPTS"
 		ENCODER="$OGGENC"
 		;;
+	flac)
+		ENCODEROPTS="$FLACOPTS"
+		ENCODER="$FLAC"
+		;;
+
 esac
 
 # and which tagger
@@ -1099,9 +1129,10 @@ if [ "$REMOTEHOSTS" ]; then NEEDDISTMP3=
 if [ "$OUTPUTTYPE" = "mp3" ]; then NEEDTAGGER=y; fi
 if [ "$OUTPUTTYPE" = "ogg" ]; then NEEDCOMMENTER=y; fi
 
+
 # Make sure a buncha things exist
 for X in $CDROMREADER $CDDISCID ${NEEDTAGGER+$TAGGER} $ENCODER $WGET \
-	${NEEDDISTMP3+$DISTMP3} ${NEEDCOMMENTER+$VORBISCOMMENT} seq
+	${NEEDDISTMP3+$DISTMP3} ${NEEDCOMMENTER+$VORBISCOMMENT} jot
 do
 	# Cut off the command-line options we just added in
 	X=$(echo $X | cut -d' ' -f2)
@@ -1191,7 +1222,7 @@ fi
 # Figure out where each track is going to be encoded
 ENCODELOCATIONS="$(echo $REMOTEHOSTS | tr , ' ')"
 if [ "$MAXPROCS" != "0" ]; then
-	for NUM in $(seq 1 "$MAXPROCS")
+	for NUM in $(jot "$MAXPROCS")
 	do
 		ENCODELOCATIONS="$ENCODELOCATIONS %local$NUM%"
 	done
