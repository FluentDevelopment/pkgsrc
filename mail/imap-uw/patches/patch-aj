$NetBSD: patch-aj,v 1.7 2002/10/28 22:21:16 elric Exp $

--- src/c-client/auth_gss.c.orig	Wed Oct 23 16:05:35 2002
+++ src/c-client/auth_gss.c	Wed Oct 23 16:06:44 2002
@@ -18,9 +18,17 @@
  * CPYRIGHT, included with this Distribution.
  */
 
+#ifdef __NetBSD__
+/* This is really Heimdal specific, but . . . */
+#include <gssapi/gssapi.h>
+#include <krb5/krb5.h>
+
+#define gss_nt_service_name	GSS_C_NT_HOSTBASED_SERVICE
+#else
 #define PROTOTYPE(x) x
 #include <gssapi/gssapi_generic.h>
 #include <gssapi/gssapi_krb5.h>
+#endif
 
 long auth_gssapi_valid (void);
 long auth_gssapi_client (authchallenge_t challenger,authrespond_t responder,
--- src/osdep/unix/Makefile.gss.orig	Wed Oct 23 17:23:36 2002
+++ src/osdep/unix/Makefile.gss	Wed Oct 23 17:41:19 2002
@@ -20,12 +20,16 @@
 
 # Extended flags needed for additional authenticators.  You may need to modify.
 
-GSSDIR=/usr/local
-GSSCFLAGS= -I$(GSSDIR)/include
-GSSOLDLDFLAGS= -L$(GSSDIR)/lib -lgssapi_krb5 -lkrb5 -lcrypto -lcom_err
-GSSNEWLDFLAGS= -L$(GSSDIR)/lib -lgssapi_krb5 -lkrb5 -lk5crypto -lcom_err
-
-gss:	# GSSAPI Kerberos V flags
-	echo $(GSSCFLAGS) >> OSCFLAGS
-	sh -c '(test -f $(GSSDIR)/lib/libk5crypto.a) && echo $(GSSNEWLDFLAGS) || echo $(GSSOLDLDFLAGS)' >> LDFLAGS
+#GSSDIR=/usr/local
+#GSSCFLAGS= -I$(GSSDIR)/include
+#GSSOLDLDFLAGS= -L$(GSSDIR)/lib -lgssapi_krb5 -lkrb5 -lcrypto -lcom_err
+#GSSNEWLDFLAGS= -L$(GSSDIR)/lib -lgssapi_krb5 -lkrb5 -lk5crypto -lcom_err
+#
+#gss:	# GSSAPI Kerberos V flags
+#	echo $(GSSCFLAGS) >> OSCFLAGS
+#	sh -c '(test -f $(GSSDIR)/lib/libk5crypto.a) && echo $(GSSNEWLDFLAGS) || echo $(GSSOLDLDFLAGS)' >> LDFLAGS
+#
 
+gss:
+	echo "-I/usr/include/krb5" >> OSCFLAGS
+	echo "-lgssapi -lkrb5 -lasn1 -lcrypto -lcom_err -lroken" >> LDFLAGS
--- src/osdep/unix/Makefile.orig	Wed Oct 23 17:53:35 2002
+++ src/osdep/unix/Makefile	Wed Oct 23 18:10:34 2002
@@ -28,8 +28,6 @@
 
 # Extended flags needed for SSL.  You may need to modify.
 
-SSLDIR=/usr/local/ssl
-SSLCERTS=$(SSLDIR)/certs
 SSLINCLUDE=$(SSLDIR)/include
 SSLLIB=$(SSLDIR)/lib
 
@@ -46,7 +44,7 @@
 
 SSLCFLAGS= -I$(SSLINCLUDE) -I$(SSLINCLUDE)/openssl\
  -DSSL_CERT_DIRECTORY=\"$(SSLCERTS)\"
-SSLLDFLAGS= -L$(SSLLIB) -lssl $(SSLCRYPTO) $(SSLRSA)
+SSLLDFLAGS= -lssl $(SSLCRYPTO) $(SSLRSA)
 
 
 # Extended flags needed for non-standard passwd types.  You may need to modify.
@@ -90,14 +88,14 @@
 # set certain other formats (e.g. mbx and mx) as the EMPTYPROTO since these
 # formats can never be empty files.
 
-CREATEPROTO=unixproto
+#CREATEPROTO=unixproto
 EMPTYPROTO=unixproto
 
 
 # Commands possibly overriden by the individual port
 
 ARRC=ar rc
-CC=cc
+#CC=cc
 LN=ln -s
 RANLIB=ranlib
 
@@ -380,9 +378,9 @@
 	 SPOOLDIR=/var/spool MAILSPOOL=/var/mail \
 	 ACTIVEFILE=/usr/share/news/active \
 	 RSHPATH=/usr/bin/rsh \
-	 BASECFLAGS="-g -O2" \
+	 BASECFLAGS="-O2" \
 	 BASELDFLAGS="-lsocket -lnsl -lgen" \
-	 RANLIB=true CC=gcc
+	 RANLIB=true
 
 gsu:	# GCC SUN-OS
 	$(BUILD) `$(CAT) SPECIALS` OS=sun \
@@ -472,9 +470,9 @@
 	$(BUILD) `$(CAT) SPECIALS` OS=bsi \
 	 CRXTYPE=nfs \
 	 SPOOLDIR=/var \
-	 ACTIVEFILE=/var/db/news/active \
+	 ACTIVEFILE=/var/news/db/active \
 	 RSHPATH=/usr/bin/rsh \
-	 BASECFLAGS="-g -O -pipe" \
+	 BASECFLAGS="-O -pipe" \
 	 BASELDFLAGS="-lcrypt"
 
 nec:	# NEC UX
@@ -871,7 +869,7 @@
 	 -DACTIVEFILE=\"$(ACTIVEFILE)\" -DNEWSSPOOL=\"$(NEWSSPOOL)\" \
 	 -DRSHPATH=\"$(RSHPATH)\" -DLOCKPGM=\"$(LOCKPGM)\" > OSCFLAGS
 	echo $(BASELDFLAGS) $(EXTRALDFLAGS) > LDFLAGS
-	echo "$(ARRC) $(ARCHIVE) $(BINARIES);$(RANLIB) $(ARCHIVE)" > ARCHIVE
+	echo "$(CC) -o $(ARCHIVE) $(BINARIES:.o=.lo) -rpath $(PREFIX)/lib -version-info $(CCLIENT_MAJOR):$(CCLIENT_MINOR) \`cat LDFLAGS\`" > ARCHIVE
 	./drivers $(EXTRADRIVERS) $(DEFAULTDRIVERS) dummy
 	./mkauths $(EXTRAAUTHENTICATORS) $(DEFAULTAUTHENTICATORS)
 	$(LN) os_$(OS).h osdep.h
