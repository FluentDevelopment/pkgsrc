$NetBSD: patch-af,v 1.17 2006/03/06 13:46:01 adam Exp $

--- dlls/ntdll/signal_i386.c.orig	2006-03-02 18:16:51.000000000 +0100
+++ dlls/ntdll/signal_i386.c
@@ -215,7 +215,7 @@ typedef struct trapframe SIGCONTEXT;
 
 #endif /* bsdi */
 
-#if defined(__NetBSD__) || defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__OpenBSD__)
+#if (defined(__NetBSD__) && (__NetBSD_Version__ < 200000000)) || defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__OpenBSD__)
 
 typedef struct sigcontext SIGCONTEXT;
 
@@ -339,8 +339,45 @@ typedef ucontext_t SIGCONTEXT;
 
 #endif /* __APPLE__ */
 
-#if defined(linux) || defined(__NetBSD__) || defined(__FreeBSD__) || defined(__FreeBSD_kernel__) ||\
-    defined(__OpenBSD__) || defined(__EMX__) || defined(__CYGWIN__)
+#if defined(__NetBSD__) && (__NetBSD_Version__ >= 200000000)
+# include <sys/ucontext.h>
+# include <sys/types.h>
+# include <signal.h>
+
+typedef ucontext_t SIGCONTEXT;
+
+#define EAX_sig(context)     ((context)->uc_mcontext.__gregs[_REG_EAX])
+#define EBX_sig(context)     ((context)->uc_mcontext.__gregs[_REG_EBX])
+#define ECX_sig(context)     ((context)->uc_mcontext.__gregs[_REG_ECX])
+#define EDX_sig(context)     ((context)->uc_mcontext.__gregs[_REG_EDX])
+#define ESI_sig(context)     ((context)->uc_mcontext.__gregs[_REG_ESI])
+#define EDI_sig(context)     ((context)->uc_mcontext.__gregs[_REG_EDI])
+#define EBP_sig(context)     ((context)->uc_mcontext.__gregs[_REG_EBP])
+
+#define CS_sig(context)      ((context)->uc_mcontext.__gregs[_REG_CS])
+#define DS_sig(context)      ((context)->uc_mcontext.__gregs[_REG_DS])
+#define ES_sig(context)      ((context)->uc_mcontext.__gregs[_REG_ES])
+#define FS_sig(context)      ((context)->uc_mcontext.__gregs[_REG_FS])
+#define GS_sig(context)      ((context)->uc_mcontext.__gregs[_REG_GS])
+#define SS_sig(context)      ((context)->uc_mcontext.__gregs[_REG_SS])
+
+#define EFL_sig(context)     ((context)->uc_mcontext.__gregs[_REG_EFL])
+
+#define EIP_sig(context)     (*((unsigned long*)&(context)->uc_mcontext.__gregs[_REG_EIP]))
+#define ESP_sig(context)     (*((unsigned long*)&(context)->uc_mcontext.__gregs[_REG_ESP]))
+
+#define TRAP_sig(context)    ((context)->uc_mcontext.__gregs[_REG_TRAPNO])
+#define ERROR_sig(context)   ((context)->uc_mcontext.__gregs[_REG_ERR])
+
+#define FAULT_ADDRESS        (__siginfo->si_addr)
+
+#define HANDLER_DEF(name) void name( int __signal, siginfo_t *__siginfo, SIGCONTEXT *__context )
+#define HANDLER_CONTEXT (__context)
+
+#endif	/* NetBSD */
+
+#if defined(linux) || (defined(__NetBSD__) && (__NetBSD_Version__ < 200000000)) || defined(__FreeBSD__) ||\
+    defined(__FreeBSD_kernel__) || defined(__OpenBSD__) || defined(__EMX__) || defined(__CYGWIN__)
 
 #define EAX_sig(context)     ((context)->sc_eax)
 #define EBX_sig(context)     ((context)->sc_ebx)
