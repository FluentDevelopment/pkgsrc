$NetBSD: patch-aa,v 1.2 2005/03/19 16:48:21 wiz Exp $

--- GNUmakefile.orig	2004-06-20 11:22:24.000000000 +0200
+++ GNUmakefile
@@ -1,5 +1,5 @@
 # can't use -fno-rtti yet because it causes problems with exception handling in GCC 2.95.2
-CXXFLAGS = -g
+#CXXFLAGS = -g
 # Uncomment the following two lines to do a release build.
 # Note that you must define NDEBUG for your own application if you define it for Crypto++.
 # Make sure you run the validation tests and test your own program thoroughly
@@ -22,9 +22,9 @@ ifeq ($(ISX86),1)
 GCC33ORLATER = $(shell $(CXX) -v 2>&1 | grep -c "gcc version \(3.[3-9]\|[4-9]\)")
 GAS210ORLATER = $(shell echo "" | $(AS) -v 2>&1 | grep -c "GNU assembler version \(2.[1-9][0-9]\|[3-9]\)")
 
-ifeq ($(GCC33ORLATER) $(ISMINGW),1 0)	# MINGW32 is missing the memalign function
-CXXFLAGS += -msse2
-endif
+#ifeq ($(GCC33ORLATER) $(ISMINGW),1 0)	# MINGW32 is missing the memalign function
+#CXXFLAGS += -msse2
+#endif
 
 ifeq ($(GAS210ORLATER),0)	# .intel_syntax wasn't supported until GNU assembler 2.10
 CXXFLAGS += -DCRYPTOPP_DISABLE_X86ASM
@@ -38,14 +38,14 @@ endif
 
 ifeq ($(UNAME),)	# for DJGPP, where uname doesn't exist
 CXXFLAGS += -mbnu210
-else
-CXXFLAGS += -pipe
+#else
+#CXXFLAGS += -pipe
 endif
 
 ifeq ($(UNAME),Darwin)
 AR = libtool
 ARFLAGS = -static -o
-CXX = c++
+#CXX = c++
 CXXFLAGS += -D__pic__
 IS_GCC2 = $(shell $(CXX) -v 2>&1 | grep -c gcc-932)
 ifeq ($(IS_GCC2),1)
@@ -75,7 +75,7 @@ LIBIMPORTOBJS = $(LIBOBJS:.o=.import.o)
 TESTIMPORTOBJS = $(TESTOBJS:.o=.import.o)
 DLLTESTOBJS = dlltest.dllonly.o
 
-all: cryptest.exe
+all: cryptest
 
 clean:
 	$(RM) cryptest.exe libcryptopp.a $(LIBOBJS) $(TESTOBJS) cryptopp.dll libcryptopp.dll.a libcryptopp.import.a cryptest.import.exe dlltest.exe $(DLLOBJS) $(LIBIMPORTOBJS) $(TESTIMPORTOBJS) $(DLLTESTOBJS)
@@ -84,7 +84,7 @@ libcryptopp.a: $(LIBOBJS)
 	$(AR) $(ARFLAGS) $@ $(LIBOBJS)
 	$(RANLIB) $@
 
-cryptest.exe: libcryptopp.a $(TESTOBJS)
+cryptest: libcryptopp.a $(TESTOBJS)
 	$(CXX) -o $@ $(CXXFLAGS) $(TESTOBJS) -L. -lcryptopp $(LDFLAGS) $(LDLIBS)
 
 nolib: $(OBJS)		# makes it faster to test changes
