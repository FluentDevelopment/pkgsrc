# $NetBSD: buffer,v 1.5 2004/01/29 07:14:30 jlam Exp $
#
# Push arguments onto the argument stack and shift the arguments.  The
# next argument checked by the cache and logic files is take from the
# the top of the stack.
#
if $test -z "$depth"; then
	arg="$1"; shift
	#
	# Marshall any group of consecutive arguments into a single
	# $arg to be checked in the cache and logic files.
	#
	. $marshall
	#
	# Fill the buffers from $arg.
	#
	case $arg in
	-R*:*|-Wl,-R*:*|-Wl,-rpath,*:*|-Wl,-rpath-link,*:*|\
	-Wl,--rpath,*:*|-Wl,--rpath-link,*:*)
		#
		# Change "-<rpath_flag>/path1:/path2" into
		# "-<rpath_flag>/path1 -<rpath_flag>/path2" so that
		# they can be checked correctly in the cache and logic
		# files.
		#
		case $arg in
		-R*)			R="-R" ;;
		-Wl,-R*)		R="-Wl,-R" ;;
		-Wl,-rpath,*)		R="-Wl,-rpath," ;;
		-Wl,-rpath-link,*)	R="-Wl,-rpath-link," ;;
		-Wl,--rpath,*)		R="-Wl,--rpath," ;;
		-Wl,--rpath-link,*)	R="-Wl,--rpath-link," ;;
		esac
		arg=`$echo "X$arg" | $Xsed -e "s|^"$R"||g"`
		allargs="$@"
		save_IFS="${IFS}"; IFS=":"
		dirlist=
		set -- $arg
		while $test $# -gt 0; do
			case "$dirlist" in
			"$1"|"$1 "*) ;;
			*" $1 "*|*" $1")	 ;;
			*) dirlist="$1 $dirlist" ;;
			esac
			shift
		done
		IFS="${save_IFS}"
		if $test -n "$allargs"; then
			set -- $allargs
		fi
		for dir in $dirlist; do
			depth=${depth}0
			eval stack${depth}="\$R\$dir"
		done
		;;
	*)
		depth=${depth}0
		eval stack${depth}="\$arg"
		;;
	esac
fi
#
# Re-fetch $arg from the top of the stack.
#
eval arg="\$stack${depth}"
depth=${depth%0}
