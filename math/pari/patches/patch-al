$NetBSD: patch-al,v 1.1 2003/07/07 21:57:51 jtb Exp $

--- src/kernel/sparcv8/Makefile.SH.orig
+++ src/kernel/sparcv8/Makefile.SH
@@ -5,7 +5,7 @@
 #   that can (resp. cannot) be inline.
 #   Problem: "divll" uses "overflow", so kernel2.o is not the same when
 #   compiled with gcc or with cc. We should try to find a workaround.
-# For NextStep or Linux
+#   For NextStep, Linux, or NetBSD
 #   We don't accept "asm inline" since it does not work (Ptitboul)
 
 if test "$gnuas" = "yes"; then do_cpp=yes; fi
@@ -14,7 +14,7 @@
 kernel1=$ker/level0_$asmarch.S
 kernel2=$ker/level0.S
 
-if test "$osname" = "nextstep" -o "$osname" = "linux"
+if test "$osname" = "nextstep" -o "$osname" = "linux" -o "$osname" = "netbsd"
 then
   level0=$src/kernel/none/asm0.h
 else
@@ -22,7 +22,7 @@
 fi
 level1=$src/kernel/none/level1.h
 
-if test "$osname" = "nextstep" -o "$osname" = "linux" -o "$do_cpp" = "yes"
+if test "$osname" = "nextstep" -o "$osname" = "linux" -o "$osname" = "netbsd" -o "$do_cpp" = "yes"
 then
 cat >> $file << EOT
 kernel1.s: $kernel1
@@ -37,14 +37,14 @@
 cat >> $file << EOT
 pariinl.h: $level0 $level1
 	cat $level0 $level1 > \$@
-kernel.o:  $kernel1
-	\$(AS) \$(ASFLAGS) -o \$@ $kernel1
-kernel2.o: $kernel2
-	\$(AS) \$(ASFLAGS) -o \$@ $kernel2
+kernel\$(_O):  $kernel1
+	\$(CC) -c \$(CFLAGS) \$(CPPFLAGS) -o \$@ $kernel1
+kernel2\$(_O): $kernel2
+	\$(CC) -c \$(CFLAGS) \$(CPPFLAGS) -o \$@ $kernel2
 # Level 1 kernel is the generic one
-mp.o: .headers $src/kernel/none/mp.c
+mp\$(_O): .headers $src/kernel/none/mp.c
 	\$(CC) -c \$(CFLAGS) \$(CPPFLAGS) -o \$@ $src/kernel/none/mp.c
-mpinl.o: .headers $level1
+mpinl\$(_O): .headers $level1
 	\$(CC) -c \$(CFLAGS) \$(CPPFLAGS) -o \$@ $src/kernel/none/level1.c
 
 EOT
