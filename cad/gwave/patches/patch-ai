$NetBSD: patch-ai,v 1.1 2003/11/05 22:31:43 dmcmahill Exp $

--- src/wavepanel.c.orig	2003-02-12 22:48:53.000000000 -0500
+++ src/wavepanel.c
@@ -46,10 +46,10 @@
 #define WAVEPANEL_MAX_REQHEIGHT 400
 
 XSCM_HOOK(new_wavepanel_hook,"new-wavepanel-hook", 1, (SCM wp),
-"This hook is invoked with one WavePanel argument, WP, when the
-WavePanel is first created and added to the waveform window.
-The main purpose of this hook is to allow creation of 
-popup menus and other event bindings for the wavepanel.");
+"This hook is invoked with one WavePanel argument, WP, when the"
+"WavePanel is first created and added to the waveform window."
+"The main purpose of this hook is to allow creation of "
+"popup menus and other event bindings for the wavepanel.");
 
 SCM wavepanel_mouse_binding[6];
 WavePanel *last_drop_wavepanel;
@@ -314,9 +314,9 @@ XSCM_DEFINE(wavepanel_y_zoom_x, "wavepan
 
 XSCM_DEFINE(wavepanel_y_manual_p, "wavepanel-y-manual?", 1, 0, 0,
 	   (SCM wavepanel),
-"If WAVEPANEL's y extents have been zoomed manually, return #t.
-Otherwise, return #f to indicate automatic y-zoom to show the minimum
-and maximum values of all dependent variables")
+"If WAVEPANEL's y extents have been zoomed manually, return #t."
+"Otherwise, return #f to indicate automatic y-zoom to show the minimum"
+"and maximum values of all dependent variables")
 #define FUNC_NAME s_wavepanel_y_manual_p
 {
 	WavePanel *wp;
@@ -333,10 +333,10 @@ and maximum values of all dependent vari
 
 XSCM_DEFINE(set_wavepanel_ylabels_visible_x, "set-wavepanel-ylabels-visible!", 2, 0, 0,
 	   (SCM wavepanel, SCM show),
-"If SHOW is #t, make the Y-axis labels on the left side of WAVEPANEL
-visible.  If show is #f, hide the labels.  Hiding the labels allows
-shrinking WAVEPANEL's height a little further.  This is useful when you have
-a lot of panels, for example with digital circuits.")
+"If SHOW is #t, make the Y-axis labels on the left side of WAVEPANEL"
+"visible.  If show is #f, hide the labels.  Hiding the labels allows"
+"shrinking WAVEPANEL's height a little further.  This is useful when you have"
+"a lot of panels, for example with digital circuits.")
 #define FUNC_NAME s_set_wavepanel_ylabels_visible_x
 {
 	WavePanel *wp;
@@ -357,8 +357,8 @@ a lot of panels, for example with digita
 
 XSCM_DEFINE(set_wavepanel_ylogscale_x, "set-wavepanel-ylogscale!", 2, 0, 0,
 	   (SCM wavepanel, SCM logscale),
-"If LOGSCALE is #t, The Y-axis of WAVEPANEL is set to have
-Logarithmic scaling.  Otherwise, scaling is linear.")
+"If LOGSCALE is #t, The Y-axis of WAVEPANEL is set to have"
+"Logarithmic scaling.  Otherwise, scaling is linear.")
 #define FUNC_NAME s_set_wavepanel_ylogscale_x
 {
 	WavePanel *wp;
@@ -423,8 +423,8 @@ XSCM_DEFINE(wavepanel_visiblewaves, "wav
  */
 XSCM_DEFINE(wavepanel_bind_mouse, "wavepanel-bind-mouse", 2, 0, 0,
            (SCM button, SCM proc),
-"binds a mouse BUTTON to the procedure PROC in all wavepanels. 
-PROC is called with 1 argument, the wavepanel that the mouse was in.")
+"binds a mouse BUTTON to the procedure PROC in all wavepanels. "
+"PROC is called with 1 argument, the wavepanel that the mouse was in.")
 #define FUNC_NAME s_wavepanel_bind_mouse
 {
 	int bnum;
@@ -447,9 +447,9 @@ PROC is called with 1 argument, the wave
 
 XSCM_DEFINE(wavepanel_x2val, "wavepanel-x2val", 2, 0, 0,
 	   (SCM wavepanel, SCM xpixel),
-"Given an XPIXEL coordinate in WAVEPANEL, 
-return the value of the independent variable at that position
-in the waveform.")
+"Given an XPIXEL coordinate in WAVEPANEL, "
+"return the value of the independent variable at that position"
+"in the waveform.")
 #define FUNC_NAME s_wavepanel_x2val
 {
 	WavePanel *wp;
@@ -464,9 +464,9 @@ in the waveform.")
 
 XSCM_DEFINE(wavepanel_y2val, "wavepanel-y2val", 2, 0, 0,
 	   (SCM wavepanel, SCM ypixel),
-"Given a YPIXEL screen-space coordinate in WAVEPANEL, 
-return the value that the dependent variable would have
-at that position.")
+"Given a YPIXEL screen-space coordinate in WAVEPANEL, "
+"return the value that the dependent variable would have"
+"at that position.")
 #define FUNC_NAME s_wavepanel_y2val
 {
 	WavePanel *wp;
@@ -481,9 +481,9 @@ at that position.")
 
 XSCM_DEFINE(wavepanel_disp_rect, "wavepanel-disp-rect", 1, 0, 0,
 	   (SCM wavepanel),
-"Return a list containing coordinates of the space displayed 
-currently displayed by the current zoom setting of WAVEPANEL.  
-The list contains four elements, startX, startY, endX, endY")
+"Return a list containing coordinates of the space displayed "
+"currently displayed by the current zoom setting of WAVEPANEL. " 
+"The list contains four elements, startX, startY, endX, endY")
 #define FUNC_NAME s_wavepanel_disp_rect
 {
 	WavePanel *wp;
@@ -499,9 +499,9 @@ The list contains four elements, startX,
 
 XSCM_DEFINE(wavepanel_max_rect, "wavepanel-max-rect", 1, 0, 0,
 	   (SCM wavepanel),
-"Return a list containing coordinates of the bounding box of all waveforms
-displayed in WAVEPANEL.
-The list contains four elements, minX, minY, maxX, maxY")
+"Return a list containing coordinates of the bounding box of all waveforms"
+"displayed in WAVEPANEL."
+"The list contains four elements, minX, minY, maxX, maxY")
 #define FUNC_NAME s_wavepanel_max_rect
 {
 	WavePanel *wp;
@@ -517,9 +517,9 @@ The list contains four elements, minX, m
 
 XSCM_DEFINE(set_wavepanel_minheight_x, "set-wavepanel-minheight!", 2, 0, 0,
 	   (SCM wavepanel, SCM height),
-"Set the minimum height of WAVEPANEL to HEIGHT pixels.  Adding multiple
-VisibleWaves to the wavepanel can cause the actual height to increase
-beyond this minimum, but it will never be smaller.")
+"Set the minimum height of WAVEPANEL to HEIGHT pixels.  Adding multiple"
+"VisibleWaves to the wavepanel can cause the actual height to increase"
+"beyond this minimum, but it will never be smaller.")
 #define FUNC_NAME s_set_wavepanel_minheight_x
 {
 	WavePanel *wp;
