$NetBSD: patch-af,v 1.1 2004/02/23 13:40:21 cube Exp $

--- configure.ac.orig	2004-02-07 16:37:01.000000000 +0100
+++ configure.ac
@@ -20,7 +20,7 @@ dnl }}}
 
 dnl Checks for libraries. {{{
 AC_PATH_XTRA()
-test "${X_DISPLAY_MISSING+set}" == set && exit 1
+test "${X_DISPLAY_MISSING+set}" = set && exit 1
 AC_CHECK_LIB([Xext],
 			 [XMissingExtension],
 			 [X_LIBS="$X_LIBS -lXext"],
@@ -73,7 +73,7 @@ AC_ARG_ENABLE([Xutf8],
 							   instead of Xmb routines in an UTF-8 locale given
 							   the -i18n command line option])])
 
-if test "x$enable_Xutf8" == xyes; then
+if test "x$enable_Xutf8" = xyes; then
 	AC_MSG_CHECKING([for Xutf8*])
 	save_CFLAGS="$CFLAGS"
 	CFLAGS="$CFLAGS $X_CFLAGS"
@@ -115,7 +115,7 @@ else
 	libtool_path="$PATH"
 fi
 AC_PATH_PROG([LIBTOOL], [libtool], [], [$libtool_path])
-test "x$LIBTOOL" == x && exit 1
+test "x$LIBTOOL" = x && exit 1
 AC_MSG_CHECKING([for libtool version >= 1.4.3])
 libtool_version=$($LIBTOOL --version | head -n 1 | cut -d' ' -f4)
 dnl libtool_version=$($LIBTOOL --version | $EGREP -o '[0-9]+(\.[0-9]+)+' | head -n 1)
@@ -143,7 +143,7 @@ AC_ARG_ENABLE([shared],
 							  [Do not dynamically load modules (preload modules
 							   instead)])])
 
-if test "x$enable_shared" == xno; then
+if test "x$enable_shared" = xno; then
 	PRELOAD_MODULES="1"
 fi
 
@@ -173,14 +173,14 @@ AC_ARG_WITH([lua-suffix],
 dnl }}}
 
 dnl LUA {{{
-if test "x$with_lua_prefix" == x; then
+if test "x$with_lua_prefix" = x; then
 	lua_search_path="$PATH"
 else
 	lua_search_path="$with_lua_prefix/bin"
 fi
-if test "x$LUA" == x; then
+if test "x$LUA" = x; then
 	AC_PATH_PROG([LUA], [lua$with_lua_suffix], [], [$lua_search_path])
-	test "x$LUA" == x && exit 1
+	test "x$LUA" = x && exit 1
 fi
 dnl }}}
 
@@ -200,16 +200,16 @@ esac
 dnl }}}
 
 dnl LUAC {{{
-if test "x$LUAC" == x; then
+if test "x$LUAC" = x; then
 	AC_PATH_PROG([LUAC], [luac$with_lua_suffix], [], [$lua_search_path])
-	test "x$LUAC" == x && exit 1
+	test "x$LUAC" = x && exit 1
 fi
 dnl }}}
 
 dnl luac_version {{{
 AC_MSG_CHECKING([for lua version == luac version])
 luac_version=$($LUAC -v 2>&1 | head -n 1 | cut -d' ' -f2)
-if test "x$lua_version" == "x$luac_version"; then
+if test "x$lua_version" = "x$luac_version"; then
 	AC_MSG_RESULT([yes (found $luac_version)])
 else
 	AC_MSG_RESULT([no (found $luac_version)])
@@ -301,7 +301,7 @@ AC_ARG_ENABLE([xopen-source],
 			  [AS_HELP_STRING([--enable-xopen-source],
 							  [Enable X/Open C flags (development use only)])])
 
-if test "x$enable_xopen_source" == xyes; then
+if test "x$enable_xopen_source" = xyes; then
 	AC_MSG_CHECKING([for $CC flags to accept X/Open C])
 	case $host in
 	# FIXME: what flags are required for other hosts/compilers?
@@ -325,7 +325,7 @@ AC_ARG_ENABLE([c99-source],
 			  [AS_HELP_STRING([--enable-c99-source],
 							  [Enable C99 source (development use only)])])
 
-if test "x$enable_c99_source" == xyes; then
+if test "x$enable_c99_source" = xyes; then
 	AC_MSG_CHECKING([for $CC flags to accept C99])
 	case $CC in
 	# FIXME: what flags are required for other hosts/compilers?
@@ -428,7 +428,7 @@ dnl }}}
 
 AC_OUTPUT([system-ac.mk])
 
-if test "x$lua_version" == "x5.0"; then
+if test "x$lua_version" = "x5.0"; then
 	AC_MSG_NOTICE([**])
 	AC_MSG_NOTICE([** lua version 5.0 is buggy, consider upgrading to 5.0.1])
 	AC_MSG_NOTICE([** see http://lua-users.org/lists/lua-l/2003-10/msg00039.html])
